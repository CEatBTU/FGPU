; ModuleID = 'median.cl'
target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
target triple = "mips-unknown-uknown"

; Function Attrs: nounwind
define void @median(i32* nocapture readonly %in, i32* nocapture %out) #0 {
entry:
  %0 = tail call i32 asm sideeffect "lid $0, $1", "=r,I,~{$1}"(i32 1) #1, !srcloc !7
  %1 = tail call i32 asm sideeffect "wgoff $0, $1", "=r,I,~{$1}"(i32 1) #1, !srcloc !8
  %add.i = add nsw i32 %1, %0
  %2 = tail call i32 asm sideeffect "lid $0, $1", "=r,I,~{$1}"(i32 0) #1, !srcloc !7
  %3 = tail call i32 asm sideeffect "wgoff $0, $1", "=r,I,~{$1}"(i32 0) #1, !srcloc !8
  %add.i.2148 = add nsw i32 %3, %2
  %4 = tail call i32 asm sideeffect "size $0, $1", "=r,I,~{$1}"(i32 0) #1, !srcloc !9
  %cmp = icmp eq i32 %add.i, 0
  %conv = zext i1 %cmp to i32
  %cmp3 = icmp eq i32 %add.i.2148, 0
  %conv4 = zext i1 %cmp3 to i32
  %or = or i32 %conv4, %conv
  %sub = add i32 %4, -2
  %cmp5 = icmp ugt i32 %add.i, %sub
  %conv6 = zext i1 %cmp5 to i32
  %or7 = or i32 %or, %conv6
  %cmp9 = icmp ugt i32 %add.i.2148, %sub
  %conv10 = zext i1 %cmp9 to i32
  %or11 = or i32 %or7, %conv10
  %tobool = icmp eq i32 %or11, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %sub13 = add i32 %add.i, -1
  %mul = mul i32 %4, %sub13
  %add = add i32 %mul, %add.i.2148
  %sub14 = add i32 %add, -1
  %arrayidx = getelementptr inbounds i32, i32* %in, i32 %sub14
  %5 = load i32, i32* %arrayidx, align 4, !tbaa !10
  %mul15 = mul i32 %4, %add.i
  %add16 = add i32 %mul15, %add.i.2148
  %sub17 = add i32 %add16, -1
  %arrayidx18 = getelementptr inbounds i32, i32* %in, i32 %sub17
  %6 = load i32, i32* %arrayidx18, align 4, !tbaa !10
  %add19 = add i32 %add.i, 1
  %mul20 = mul i32 %4, %add19
  %add21 = add i32 %mul20, %add.i.2148
  %sub22 = add i32 %add21, -1
  %arrayidx23 = getelementptr inbounds i32, i32* %in, i32 %sub22
  %7 = load i32, i32* %arrayidx23, align 4, !tbaa !10
  %arrayidx27 = getelementptr inbounds i32, i32* %in, i32 %add
  %8 = load i32, i32* %arrayidx27, align 4, !tbaa !10
  %arrayidx30 = getelementptr inbounds i32, i32* %in, i32 %add16
  %9 = load i32, i32* %arrayidx30, align 4, !tbaa !10
  %arrayidx34 = getelementptr inbounds i32, i32* %in, i32 %add21
  %10 = load i32, i32* %arrayidx34, align 4, !tbaa !10
  %add38 = add i32 %add, 1
  %arrayidx39 = getelementptr inbounds i32, i32* %in, i32 %add38
  %11 = load i32, i32* %arrayidx39, align 4, !tbaa !10
  %add42 = add i32 %add16, 1
  %arrayidx43 = getelementptr inbounds i32, i32* %in, i32 %add42
  %12 = load i32, i32* %arrayidx43, align 4, !tbaa !10
  %add47 = add i32 %add21, 1
  %arrayidx48 = getelementptr inbounds i32, i32* %in, i32 %add47
  %13 = load i32, i32* %arrayidx48, align 4, !tbaa !10
  %and = and i32 %5, 255
  %and49 = and i32 %8, 255
  %and50 = and i32 %11, 255
  %and51 = and i32 %6, 255
  %and52 = and i32 %9, 255
  %and53 = and i32 %12, 255
  %and54 = and i32 %7, 255
  %and55 = and i32 %10, 255
  %and56 = and i32 %13, 255
  %cmp57 = icmp ugt i32 %and, %and49
  %conv58 = zext i1 %cmp57 to i32
  %cmp59 = icmp ugt i32 %and, %and50
  %conv60 = zext i1 %cmp59 to i32
  %cmp61 = icmp ugt i32 %and49, %and50
  %conv62 = zext i1 %cmp61 to i32
  %add63 = add nuw nsw i32 %conv60, %conv58
  %lnot.ext = xor i32 %conv58, 1
  %add65 = add nuw nsw i32 %conv62, %lnot.ext
  %lnot.ext68 = xor i32 %conv60, 1
  %lnot.ext71 = xor i32 %conv62, 1
  %add72 = add nuw nsw i32 %lnot.ext68, %lnot.ext71
  %cmp73 = icmp eq i32 %add65, 0
  %cond = select i1 %cmp73, i32 %and49, i32 %and
  %cmp75 = icmp eq i32 %add72, 0
  %cond80 = select i1 %cmp75, i32 %and50, i32 %cond
  %cmp81 = icmp eq i32 %add63, 1
  %cond86 = select i1 %cmp81, i32 %and, i32 %and49
  %cmp87 = icmp eq i32 %add72, 1
  %cond92 = select i1 %cmp87, i32 %and50, i32 %cond86
  %cmp93 = icmp eq i32 %add63, 2
  %cond98 = select i1 %cmp93, i32 %and, i32 %and50
  %cmp99 = icmp eq i32 %add65, 2
  %cond104 = select i1 %cmp99, i32 %and49, i32 %cond98
  %cmp113 = icmp ugt i32 %and51, %and52
  %conv114 = zext i1 %cmp113 to i32
  %cmp115 = icmp ugt i32 %and51, %and53
  %conv116 = zext i1 %cmp115 to i32
  %cmp117 = icmp ugt i32 %and52, %and53
  %conv118 = zext i1 %cmp117 to i32
  %add119 = add nuw nsw i32 %conv116, %conv114
  %lnot.ext122 = xor i32 %conv114, 1
  %add123 = add nuw nsw i32 %conv118, %lnot.ext122
  %lnot.ext126 = xor i32 %conv116, 1
  %lnot.ext129 = xor i32 %conv118, 1
  %add130 = add nuw nsw i32 %lnot.ext126, %lnot.ext129
  %cmp131 = icmp eq i32 %add123, 0
  %cond136 = select i1 %cmp131, i32 %and52, i32 %and51
  %cmp137 = icmp eq i32 %add130, 0
  %cond142 = select i1 %cmp137, i32 %and53, i32 %cond136
  %cmp143 = icmp eq i32 %add119, 1
  %cond148 = select i1 %cmp143, i32 %and51, i32 %and52
  %cmp149 = icmp eq i32 %add130, 1
  %cond154 = select i1 %cmp149, i32 %and53, i32 %cond148
  %cmp155 = icmp eq i32 %add119, 2
  %cond160 = select i1 %cmp155, i32 %and51, i32 %and53
  %cmp161 = icmp eq i32 %add123, 2
  %cond166 = select i1 %cmp161, i32 %and52, i32 %cond160
  %cmp175 = icmp ugt i32 %and54, %and55
  %conv176 = zext i1 %cmp175 to i32
  %cmp177 = icmp ugt i32 %and54, %and56
  %conv178 = zext i1 %cmp177 to i32
  %cmp179 = icmp ugt i32 %and55, %and56
  %conv180 = zext i1 %cmp179 to i32
  %add181 = add nuw nsw i32 %conv178, %conv176
  %lnot.ext184 = xor i32 %conv176, 1
  %add185 = add nuw nsw i32 %conv180, %lnot.ext184
  %lnot.ext188 = xor i32 %conv178, 1
  %lnot.ext191 = xor i32 %conv180, 1
  %add192 = add nuw nsw i32 %lnot.ext188, %lnot.ext191
  %cmp193 = icmp eq i32 %add185, 0
  %cond198 = select i1 %cmp193, i32 %and55, i32 %and54
  %cmp199 = icmp eq i32 %add192, 0
  %cond204 = select i1 %cmp199, i32 %and56, i32 %cond198
  %cmp205 = icmp eq i32 %add181, 1
  %cond210 = select i1 %cmp205, i32 %and54, i32 %and55
  %cmp211 = icmp eq i32 %add192, 1
  %cond216 = select i1 %cmp211, i32 %and56, i32 %cond210
  %cmp217 = icmp eq i32 %add181, 2
  %cond222 = select i1 %cmp217, i32 %and54, i32 %and56
  %cmp223 = icmp eq i32 %add185, 2
  %cond228 = select i1 %cmp223, i32 %and55, i32 %cond222
  %cmp237 = icmp ule i32 %cond80, %cond142
  %cmp239 = icmp ule i32 %cond80, %cond204
  %cmp241 = icmp ugt i32 %cond142, %cond204
  %lnot.ext246 = zext i1 %cmp237 to i32
  %lnot.ext250 = zext i1 %cmp239 to i32
  %14 = zext i1 %cmp241 to i32
  %lnot.ext253 = xor i32 %14, 1
  %add247 = sext i1 %cmp241 to i32
  %cmp255 = icmp eq i32 %lnot.ext246, %add247
  %cond260 = select i1 %cmp255, i32 %cond142, i32 %cond80
  %add254 = sub nsw i32 0, %lnot.ext253
  %cmp261 = icmp eq i32 %lnot.ext250, %add254
  %cond266 = select i1 %cmp261, i32 %cond204, i32 %cond260
  %cmp299 = icmp ugt i32 %cond92, %cond154
  %conv300 = zext i1 %cmp299 to i32
  %cmp301 = icmp ugt i32 %cond92, %cond216
  %conv302 = zext i1 %cmp301 to i32
  %cmp303 = icmp ule i32 %cond154, %cond216
  %add305 = add nuw nsw i32 %conv302, %conv300
  %lnot.ext312 = xor i32 %conv302, 1
  %lnot.ext315 = zext i1 %cmp303 to i32
  %add316 = add nuw nsw i32 %lnot.ext312, %lnot.ext315
  %cmp329 = icmp eq i32 %add305, 1
  %cond334 = select i1 %cmp329, i32 %cond92, i32 %cond154
  %cmp335 = icmp eq i32 %add316, 1
  %cond340 = select i1 %cmp335, i32 %cond216, i32 %cond334
  %cmp361 = icmp ugt i32 %cond104, %cond166
  %conv362 = zext i1 %cmp361 to i32
  %cmp363 = icmp ugt i32 %cond104, %cond228
  %conv364 = zext i1 %cmp363 to i32
  %cmp365 = icmp ugt i32 %cond166, %cond228
  %conv366 = zext i1 %cmp365 to i32
  %add367 = add nuw nsw i32 %conv364, %conv362
  %lnot.ext370 = xor i32 %conv362, 1
  %add371 = add nuw nsw i32 %lnot.ext370, %conv366
  %cmp403 = icmp eq i32 %add367, 2
  %cond408 = select i1 %cmp403, i32 %cond104, i32 %cond228
  %cmp409 = icmp eq i32 %add371, 2
  %cond414 = select i1 %cmp409, i32 %cond166, i32 %cond408
  %cmp423 = icmp ugt i32 %cond266, %cond340
  %conv424 = zext i1 %cmp423 to i32
  %cmp425 = icmp ugt i32 %cond266, %cond414
  %conv426 = zext i1 %cmp425 to i32
  %cmp427 = icmp ule i32 %cond340, %cond414
  %add429 = add nuw nsw i32 %conv426, %conv424
  %lnot.ext436 = xor i32 %conv426, 1
  %lnot.ext439 = zext i1 %cmp427 to i32
  %add440 = add nuw nsw i32 %lnot.ext436, %lnot.ext439
  %cmp453 = icmp eq i32 %add429, 1
  %cond458 = select i1 %cmp453, i32 %cond266, i32 %cond340
  %cmp459 = icmp eq i32 %add440, 1
  %cond464 = select i1 %cmp459, i32 %cond414, i32 %cond458
  %shr = lshr i32 %5, 8
  %and477 = and i32 %shr, 255
  %shr478 = lshr i32 %8, 8
  %and479 = and i32 %shr478, 255
  %shr480 = lshr i32 %11, 8
  %and481 = and i32 %shr480, 255
  %shr482 = lshr i32 %6, 8
  %and483 = and i32 %shr482, 255
  %shr484 = lshr i32 %9, 8
  %and485 = and i32 %shr484, 255
  %shr486 = lshr i32 %12, 8
  %and487 = and i32 %shr486, 255
  %shr488 = lshr i32 %7, 8
  %and489 = and i32 %shr488, 255
  %shr490 = lshr i32 %10, 8
  %and491 = and i32 %shr490, 255
  %shr492 = lshr i32 %13, 8
  %and493 = and i32 %shr492, 255
  %cmp502 = icmp ugt i32 %and477, %and479
  %conv503 = zext i1 %cmp502 to i32
  %cmp504 = icmp ugt i32 %and477, %and481
  %conv505 = zext i1 %cmp504 to i32
  %cmp506 = icmp ugt i32 %and479, %and481
  %conv507 = zext i1 %cmp506 to i32
  %add508 = add nuw nsw i32 %conv505, %conv503
  %lnot.ext511 = xor i32 %conv503, 1
  %add512 = add nuw nsw i32 %conv507, %lnot.ext511
  %lnot.ext515 = xor i32 %conv505, 1
  %lnot.ext518 = xor i32 %conv507, 1
  %add519 = add nuw nsw i32 %lnot.ext515, %lnot.ext518
  %cmp520 = icmp eq i32 %add512, 0
  %cond525 = select i1 %cmp520, i32 %and479, i32 %and477
  %cmp526 = icmp eq i32 %add519, 0
  %cond531 = select i1 %cmp526, i32 %and481, i32 %cond525
  %cmp532 = icmp eq i32 %add508, 1
  %cond537 = select i1 %cmp532, i32 %and477, i32 %and479
  %cmp538 = icmp eq i32 %add519, 1
  %cond543 = select i1 %cmp538, i32 %and481, i32 %cond537
  %cmp544 = icmp eq i32 %add508, 2
  %cond549 = select i1 %cmp544, i32 %and477, i32 %and481
  %cmp550 = icmp eq i32 %add512, 2
  %cond555 = select i1 %cmp550, i32 %and479, i32 %cond549
  %cmp564 = icmp ugt i32 %and483, %and485
  %conv565 = zext i1 %cmp564 to i32
  %cmp566 = icmp ugt i32 %and483, %and487
  %conv567 = zext i1 %cmp566 to i32
  %cmp568 = icmp ugt i32 %and485, %and487
  %conv569 = zext i1 %cmp568 to i32
  %add570 = add nuw nsw i32 %conv567, %conv565
  %lnot.ext573 = xor i32 %conv565, 1
  %add574 = add nuw nsw i32 %conv569, %lnot.ext573
  %lnot.ext577 = xor i32 %conv567, 1
  %lnot.ext580 = xor i32 %conv569, 1
  %add581 = add nuw nsw i32 %lnot.ext577, %lnot.ext580
  %cmp582 = icmp eq i32 %add574, 0
  %cond587 = select i1 %cmp582, i32 %and485, i32 %and483
  %cmp588 = icmp eq i32 %add581, 0
  %cond593 = select i1 %cmp588, i32 %and487, i32 %cond587
  %cmp594 = icmp eq i32 %add570, 1
  %cond599 = select i1 %cmp594, i32 %and483, i32 %and485
  %cmp600 = icmp eq i32 %add581, 1
  %cond605 = select i1 %cmp600, i32 %and487, i32 %cond599
  %cmp606 = icmp eq i32 %add570, 2
  %cond611 = select i1 %cmp606, i32 %and483, i32 %and487
  %cmp612 = icmp eq i32 %add574, 2
  %cond617 = select i1 %cmp612, i32 %and485, i32 %cond611
  %cmp626 = icmp ugt i32 %and489, %and491
  %conv627 = zext i1 %cmp626 to i32
  %cmp628 = icmp ugt i32 %and489, %and493
  %conv629 = zext i1 %cmp628 to i32
  %cmp630 = icmp ugt i32 %and491, %and493
  %conv631 = zext i1 %cmp630 to i32
  %add632 = add nuw nsw i32 %conv629, %conv627
  %lnot.ext635 = xor i32 %conv627, 1
  %add636 = add nuw nsw i32 %conv631, %lnot.ext635
  %lnot.ext639 = xor i32 %conv629, 1
  %lnot.ext642 = xor i32 %conv631, 1
  %add643 = add nuw nsw i32 %lnot.ext639, %lnot.ext642
  %cmp644 = icmp eq i32 %add636, 0
  %cond649 = select i1 %cmp644, i32 %and491, i32 %and489
  %cmp650 = icmp eq i32 %add643, 0
  %cond655 = select i1 %cmp650, i32 %and493, i32 %cond649
  %cmp656 = icmp eq i32 %add632, 1
  %cond661 = select i1 %cmp656, i32 %and489, i32 %and491
  %cmp662 = icmp eq i32 %add643, 1
  %cond667 = select i1 %cmp662, i32 %and493, i32 %cond661
  %cmp668 = icmp eq i32 %add632, 2
  %cond673 = select i1 %cmp668, i32 %and489, i32 %and493
  %cmp674 = icmp eq i32 %add636, 2
  %cond679 = select i1 %cmp674, i32 %and491, i32 %cond673
  %cmp688 = icmp ule i32 %cond531, %cond593
  %cmp690 = icmp ule i32 %cond531, %cond655
  %cmp692 = icmp ugt i32 %cond593, %cond655
  %lnot.ext697 = zext i1 %cmp688 to i32
  %lnot.ext701 = zext i1 %cmp690 to i32
  %15 = zext i1 %cmp692 to i32
  %lnot.ext704 = xor i32 %15, 1
  %add698 = sext i1 %cmp692 to i32
  %cmp706 = icmp eq i32 %lnot.ext697, %add698
  %cond711 = select i1 %cmp706, i32 %cond593, i32 %cond531
  %add705 = sub nsw i32 0, %lnot.ext704
  %cmp712 = icmp eq i32 %lnot.ext701, %add705
  %cond717 = select i1 %cmp712, i32 %cond655, i32 %cond711
  %cmp750 = icmp ugt i32 %cond543, %cond605
  %conv751 = zext i1 %cmp750 to i32
  %cmp752 = icmp ugt i32 %cond543, %cond667
  %conv753 = zext i1 %cmp752 to i32
  %cmp754 = icmp ule i32 %cond605, %cond667
  %add756 = add nuw nsw i32 %conv753, %conv751
  %lnot.ext763 = xor i32 %conv753, 1
  %lnot.ext766 = zext i1 %cmp754 to i32
  %add767 = add nuw nsw i32 %lnot.ext763, %lnot.ext766
  %cmp780 = icmp eq i32 %add756, 1
  %cond785 = select i1 %cmp780, i32 %cond543, i32 %cond605
  %cmp786 = icmp eq i32 %add767, 1
  %cond791 = select i1 %cmp786, i32 %cond667, i32 %cond785
  %cmp812 = icmp ugt i32 %cond555, %cond617
  %conv813 = zext i1 %cmp812 to i32
  %cmp814 = icmp ugt i32 %cond555, %cond679
  %conv815 = zext i1 %cmp814 to i32
  %cmp816 = icmp ugt i32 %cond617, %cond679
  %conv817 = zext i1 %cmp816 to i32
  %add818 = add nuw nsw i32 %conv815, %conv813
  %lnot.ext821 = xor i32 %conv813, 1
  %add822 = add nuw nsw i32 %lnot.ext821, %conv817
  %cmp854 = icmp eq i32 %add818, 2
  %cond859 = select i1 %cmp854, i32 %cond555, i32 %cond679
  %cmp860 = icmp eq i32 %add822, 2
  %cond865 = select i1 %cmp860, i32 %cond617, i32 %cond859
  %cmp874 = icmp ugt i32 %cond717, %cond791
  %conv875 = zext i1 %cmp874 to i32
  %cmp876 = icmp ugt i32 %cond717, %cond865
  %conv877 = zext i1 %cmp876 to i32
  %cmp878 = icmp ule i32 %cond791, %cond865
  %add880 = add nuw nsw i32 %conv877, %conv875
  %lnot.ext887 = xor i32 %conv877, 1
  %lnot.ext890 = zext i1 %cmp878 to i32
  %add891 = add nuw nsw i32 %lnot.ext887, %lnot.ext890
  %cmp904 = icmp eq i32 %add880, 1
  %cond909 = select i1 %cmp904, i32 %cond717, i32 %cond791
  %cmp910 = icmp eq i32 %add891, 1
  %cond915 = select i1 %cmp910, i32 %cond865, i32 %cond909
  %shl = shl i32 %cond915, 8
  %or928 = or i32 %shl, %cond464
  %shr929 = lshr i32 %5, 16
  %and930 = and i32 %shr929, 255
  %shr931 = lshr i32 %8, 16
  %and932 = and i32 %shr931, 255
  %shr933 = lshr i32 %11, 16
  %and934 = and i32 %shr933, 255
  %shr935 = lshr i32 %6, 16
  %and936 = and i32 %shr935, 255
  %shr937 = lshr i32 %9, 16
  %and938 = and i32 %shr937, 255
  %shr939 = lshr i32 %12, 16
  %and940 = and i32 %shr939, 255
  %shr941 = lshr i32 %7, 16
  %and942 = and i32 %shr941, 255
  %shr943 = lshr i32 %10, 16
  %and944 = and i32 %shr943, 255
  %shr945 = lshr i32 %13, 16
  %and946 = and i32 %shr945, 255
  %cmp955 = icmp ugt i32 %and930, %and932
  %conv956 = zext i1 %cmp955 to i32
  %cmp957 = icmp ugt i32 %and930, %and934
  %conv958 = zext i1 %cmp957 to i32
  %cmp959 = icmp ugt i32 %and932, %and934
  %conv960 = zext i1 %cmp959 to i32
  %add961 = add nuw nsw i32 %conv958, %conv956
  %lnot.ext964 = xor i32 %conv956, 1
  %add965 = add nuw nsw i32 %conv960, %lnot.ext964
  %lnot.ext968 = xor i32 %conv958, 1
  %lnot.ext971 = xor i32 %conv960, 1
  %add972 = add nuw nsw i32 %lnot.ext968, %lnot.ext971
  %cmp973 = icmp eq i32 %add965, 0
  %cond978 = select i1 %cmp973, i32 %and932, i32 %and930
  %cmp979 = icmp eq i32 %add972, 0
  %cond984 = select i1 %cmp979, i32 %and934, i32 %cond978
  %cmp985 = icmp eq i32 %add961, 1
  %cond990 = select i1 %cmp985, i32 %and930, i32 %and932
  %cmp991 = icmp eq i32 %add972, 1
  %cond996 = select i1 %cmp991, i32 %and934, i32 %cond990
  %cmp997 = icmp eq i32 %add961, 2
  %cond1002 = select i1 %cmp997, i32 %and930, i32 %and934
  %cmp1003 = icmp eq i32 %add965, 2
  %cond1008 = select i1 %cmp1003, i32 %and932, i32 %cond1002
  %cmp1017 = icmp ugt i32 %and936, %and938
  %conv1018 = zext i1 %cmp1017 to i32
  %cmp1019 = icmp ugt i32 %and936, %and940
  %conv1020 = zext i1 %cmp1019 to i32
  %cmp1021 = icmp ugt i32 %and938, %and940
  %conv1022 = zext i1 %cmp1021 to i32
  %add1023 = add nuw nsw i32 %conv1020, %conv1018
  %lnot.ext1026 = xor i32 %conv1018, 1
  %add1027 = add nuw nsw i32 %conv1022, %lnot.ext1026
  %lnot.ext1030 = xor i32 %conv1020, 1
  %lnot.ext1033 = xor i32 %conv1022, 1
  %add1034 = add nuw nsw i32 %lnot.ext1030, %lnot.ext1033
  %cmp1035 = icmp eq i32 %add1027, 0
  %cond1040 = select i1 %cmp1035, i32 %and938, i32 %and936
  %cmp1041 = icmp eq i32 %add1034, 0
  %cond1046 = select i1 %cmp1041, i32 %and940, i32 %cond1040
  %cmp1047 = icmp eq i32 %add1023, 1
  %cond1052 = select i1 %cmp1047, i32 %and936, i32 %and938
  %cmp1053 = icmp eq i32 %add1034, 1
  %cond1058 = select i1 %cmp1053, i32 %and940, i32 %cond1052
  %cmp1059 = icmp eq i32 %add1023, 2
  %cond1064 = select i1 %cmp1059, i32 %and936, i32 %and940
  %cmp1065 = icmp eq i32 %add1027, 2
  %cond1070 = select i1 %cmp1065, i32 %and938, i32 %cond1064
  %cmp1079 = icmp ugt i32 %and942, %and944
  %conv1080 = zext i1 %cmp1079 to i32
  %cmp1081 = icmp ugt i32 %and942, %and946
  %conv1082 = zext i1 %cmp1081 to i32
  %cmp1083 = icmp ugt i32 %and944, %and946
  %conv1084 = zext i1 %cmp1083 to i32
  %add1085 = add nuw nsw i32 %conv1082, %conv1080
  %lnot.ext1088 = xor i32 %conv1080, 1
  %add1089 = add nuw nsw i32 %conv1084, %lnot.ext1088
  %lnot.ext1092 = xor i32 %conv1082, 1
  %lnot.ext1095 = xor i32 %conv1084, 1
  %add1096 = add nuw nsw i32 %lnot.ext1092, %lnot.ext1095
  %cmp1097 = icmp eq i32 %add1089, 0
  %cond1102 = select i1 %cmp1097, i32 %and944, i32 %and942
  %cmp1103 = icmp eq i32 %add1096, 0
  %cond1108 = select i1 %cmp1103, i32 %and946, i32 %cond1102
  %cmp1109 = icmp eq i32 %add1085, 1
  %cond1114 = select i1 %cmp1109, i32 %and942, i32 %and944
  %cmp1115 = icmp eq i32 %add1096, 1
  %cond1120 = select i1 %cmp1115, i32 %and946, i32 %cond1114
  %cmp1121 = icmp eq i32 %add1085, 2
  %cond1126 = select i1 %cmp1121, i32 %and942, i32 %and946
  %cmp1127 = icmp eq i32 %add1089, 2
  %cond1132 = select i1 %cmp1127, i32 %and944, i32 %cond1126
  %cmp1141 = icmp ule i32 %cond984, %cond1046
  %cmp1143 = icmp ule i32 %cond984, %cond1108
  %cmp1145 = icmp ugt i32 %cond1046, %cond1108
  %lnot.ext1150 = zext i1 %cmp1141 to i32
  %lnot.ext1154 = zext i1 %cmp1143 to i32
  %16 = zext i1 %cmp1145 to i32
  %lnot.ext1157 = xor i32 %16, 1
  %add1151 = sext i1 %cmp1145 to i32
  %cmp1159 = icmp eq i32 %lnot.ext1150, %add1151
  %cond1164 = select i1 %cmp1159, i32 %cond1046, i32 %cond984
  %add1158 = sub nsw i32 0, %lnot.ext1157
  %cmp1165 = icmp eq i32 %lnot.ext1154, %add1158
  %cond1170 = select i1 %cmp1165, i32 %cond1108, i32 %cond1164
  %cmp1203 = icmp ugt i32 %cond996, %cond1058
  %conv1204 = zext i1 %cmp1203 to i32
  %cmp1205 = icmp ugt i32 %cond996, %cond1120
  %conv1206 = zext i1 %cmp1205 to i32
  %cmp1207 = icmp ule i32 %cond1058, %cond1120
  %add1209 = add nuw nsw i32 %conv1206, %conv1204
  %lnot.ext1216 = xor i32 %conv1206, 1
  %lnot.ext1219 = zext i1 %cmp1207 to i32
  %add1220 = add nuw nsw i32 %lnot.ext1216, %lnot.ext1219
  %cmp1233 = icmp eq i32 %add1209, 1
  %cond1238 = select i1 %cmp1233, i32 %cond996, i32 %cond1058
  %cmp1239 = icmp eq i32 %add1220, 1
  %cond1244 = select i1 %cmp1239, i32 %cond1120, i32 %cond1238
  %cmp1265 = icmp ugt i32 %cond1008, %cond1070
  %conv1266 = zext i1 %cmp1265 to i32
  %cmp1267 = icmp ugt i32 %cond1008, %cond1132
  %conv1268 = zext i1 %cmp1267 to i32
  %cmp1269 = icmp ugt i32 %cond1070, %cond1132
  %conv1270 = zext i1 %cmp1269 to i32
  %add1271 = add nuw nsw i32 %conv1268, %conv1266
  %lnot.ext1274 = xor i32 %conv1266, 1
  %add1275 = add nuw nsw i32 %lnot.ext1274, %conv1270
  %cmp1307 = icmp eq i32 %add1271, 2
  %cond1312 = select i1 %cmp1307, i32 %cond1008, i32 %cond1132
  %cmp1313 = icmp eq i32 %add1275, 2
  %cond1318 = select i1 %cmp1313, i32 %cond1070, i32 %cond1312
  %cmp1327 = icmp ugt i32 %cond1170, %cond1244
  %conv1328 = zext i1 %cmp1327 to i32
  %cmp1329 = icmp ugt i32 %cond1170, %cond1318
  %conv1330 = zext i1 %cmp1329 to i32
  %cmp1331 = icmp ule i32 %cond1244, %cond1318
  %add1333 = add nuw nsw i32 %conv1330, %conv1328
  %lnot.ext1340 = xor i32 %conv1330, 1
  %lnot.ext1343 = zext i1 %cmp1331 to i32
  %add1344 = add nuw nsw i32 %lnot.ext1340, %lnot.ext1343
  %cmp1357 = icmp eq i32 %add1333, 1
  %cond1362 = select i1 %cmp1357, i32 %cond1170, i32 %cond1244
  %cmp1363 = icmp eq i32 %add1344, 1
  %cond1368 = select i1 %cmp1363, i32 %cond1318, i32 %cond1362
  %shl1381 = shl i32 %cond1368, 16
  %or1382 = or i32 %or928, %shl1381
  %arrayidx1385 = getelementptr inbounds i32, i32* %out, i32 %add16
  store i32 %or1382, i32* %arrayidx1385, align 4, !tbaa !10
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.end
  ret void
}

attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32r2" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }

!opencl.kernels = !{!0}
!llvm.ident = !{!6}

!0 = !{void (i32*, i32*)* @median, !1, !2, !3, !4, !5}
!1 = !{!"kernel_arg_addr_space", i32 0, i32 0}
!2 = !{!"kernel_arg_access_qual", !"none", !"none"}
!3 = !{!"kernel_arg_type", !"uint*", !"uint*"}
!4 = !{!"kernel_arg_base_type", !"uint*", !"uint*"}
!5 = !{!"kernel_arg_type_qual", !"", !""}
!6 = !{!"clang version 3.7.0 (tags/RELEASE_371/final)"}
!7 = !{i32 14639}
!8 = !{i32 14779}
!9 = !{i32 14418}
!10 = !{!11, !11, i64 0}
!11 = !{!"int", !12, i64 0}
!12 = !{!"omnipotent char", !13, i64 0}
!13 = !{!"Simple C/C++ TBAA"}
