; ModuleID = 'median.cl'
target datalayout = "E-m:m-p:32:32-i8:8:32-i16:16:32-i64:64-n32-S64"
target triple = "mips-unknown-uknown"

; Function Attrs: nounwind
define void @median(i32* nocapture readonly %in, <4 x i8>* nocapture %out) #0 {
entry:
  %0 = tail call i32 asm sideeffect "lid $0, $1", "=r,I,~{$1}"(i32 1) #1, !srcloc !7
  %1 = tail call i32 asm sideeffect "wgoff $0, $1", "=r,I,~{$1}"(i32 1) #1, !srcloc !8
  %add.i = add nsw i32 %1, %0
  %2 = tail call i32 asm sideeffect "lid $0, $1", "=r,I,~{$1}"(i32 0) #1, !srcloc !7
  %3 = tail call i32 asm sideeffect "wgoff $0, $1", "=r,I,~{$1}"(i32 0) #1, !srcloc !8
  %add.i.2145 = add nsw i32 %3, %2
  %4 = tail call i32 asm sideeffect "size $0, $1", "=r,I,~{$1}"(i32 0) #1, !srcloc !9
  %sub = add i32 %add.i, -1
  %mul = mul i32 %4, %sub
  %add = add i32 %mul, %add.i.2145
  %sub3 = add i32 %add, -1
  %arrayidx = getelementptr inbounds i32, i32* %in, i32 %sub3
  %5 = load i32, i32* %arrayidx, align 4, !tbaa !10
  %mul4 = mul i32 %4, %add.i
  %add5 = add i32 %mul4, %add.i.2145
  %sub6 = add i32 %add5, -1
  %arrayidx7 = getelementptr inbounds i32, i32* %in, i32 %sub6
  %6 = load i32, i32* %arrayidx7, align 4, !tbaa !10
  %add8 = add i32 %add.i, 1
  %mul9 = mul i32 %4, %add8
  %add10 = add i32 %mul9, %add.i.2145
  %sub11 = add i32 %add10, -1
  %arrayidx12 = getelementptr inbounds i32, i32* %in, i32 %sub11
  %7 = load i32, i32* %arrayidx12, align 4, !tbaa !10
  %arrayidx16 = getelementptr inbounds i32, i32* %in, i32 %add
  %8 = load i32, i32* %arrayidx16, align 4, !tbaa !10
  %arrayidx19 = getelementptr inbounds i32, i32* %in, i32 %add5
  %9 = load i32, i32* %arrayidx19, align 4, !tbaa !10
  %arrayidx23 = getelementptr inbounds i32, i32* %in, i32 %add10
  %10 = load i32, i32* %arrayidx23, align 4, !tbaa !10
  %add27 = add i32 %add, 1
  %arrayidx28 = getelementptr inbounds i32, i32* %in, i32 %add27
  %11 = load i32, i32* %arrayidx28, align 4, !tbaa !10
  %add31 = add i32 %add5, 1
  %arrayidx32 = getelementptr inbounds i32, i32* %in, i32 %add31
  %12 = load i32, i32* %arrayidx32, align 4, !tbaa !10
  %add36 = add i32 %add10, 1
  %arrayidx37 = getelementptr inbounds i32, i32* %in, i32 %add36
  %13 = load i32, i32* %arrayidx37, align 4, !tbaa !10
  %and = and i32 %5, 255
  %and38 = and i32 %6, 255
  %and39 = and i32 %7, 255
  %and40 = and i32 %8, 255
  %and41 = and i32 %9, 255
  %and42 = and i32 %10, 255
  %and43 = and i32 %11, 255
  %and44 = and i32 %12, 255
  %and45 = and i32 %13, 255
  %cmp = icmp ugt i32 %and, %and38
  %conv = zext i1 %cmp to i32
  %cmp46 = icmp ugt i32 %and, %and39
  %conv47 = zext i1 %cmp46 to i32
  %cmp48 = icmp ugt i32 %and38, %and39
  %conv49 = zext i1 %cmp48 to i32
  %add50 = add nuw nsw i32 %conv47, %conv
  %lnot.ext = xor i32 %conv, 1
  %add51 = add nuw nsw i32 %lnot.ext, %conv49
  %lnot.ext54 = xor i32 %conv47, 1
  %lnot.ext57 = xor i32 %conv49, 1
  %add58 = add nuw nsw i32 %lnot.ext54, %lnot.ext57
  %cmp59 = icmp eq i32 %add51, 0
  %cond = select i1 %cmp59, i32 %and38, i32 %and
  %cmp61 = icmp eq i32 %add58, 0
  %cond66 = select i1 %cmp61, i32 %and39, i32 %cond
  %cmp67 = icmp eq i32 %add50, 1
  %cond72 = select i1 %cmp67, i32 %and, i32 %and38
  %cmp73 = icmp eq i32 %add58, 1
  %cond78 = select i1 %cmp73, i32 %and39, i32 %cond72
  %cmp79 = icmp eq i32 %add50, 2
  %cond84 = select i1 %cmp79, i32 %and, i32 %and39
  %cmp85 = icmp eq i32 %add51, 2
  %cond90 = select i1 %cmp85, i32 %and38, i32 %cond84
  %cmp99 = icmp ugt i32 %and40, %and41
  %conv100 = zext i1 %cmp99 to i32
  %cmp101 = icmp ugt i32 %and40, %and42
  %conv102 = zext i1 %cmp101 to i32
  %cmp103 = icmp ugt i32 %and41, %and42
  %conv104 = zext i1 %cmp103 to i32
  %add105 = add nuw nsw i32 %conv102, %conv100
  %lnot.ext108 = xor i32 %conv100, 1
  %add109 = add nuw nsw i32 %lnot.ext108, %conv104
  %lnot.ext112 = xor i32 %conv102, 1
  %lnot.ext115 = xor i32 %conv104, 1
  %add116 = add nuw nsw i32 %lnot.ext112, %lnot.ext115
  %cmp117 = icmp eq i32 %add109, 0
  %cond122 = select i1 %cmp117, i32 %and41, i32 %and40
  %cmp123 = icmp eq i32 %add116, 0
  %cond128 = select i1 %cmp123, i32 %and42, i32 %cond122
  %cmp129 = icmp eq i32 %add105, 1
  %cond134 = select i1 %cmp129, i32 %and40, i32 %and41
  %cmp135 = icmp eq i32 %add116, 1
  %cond140 = select i1 %cmp135, i32 %and42, i32 %cond134
  %cmp141 = icmp eq i32 %add105, 2
  %cond146 = select i1 %cmp141, i32 %and40, i32 %and42
  %cmp147 = icmp eq i32 %add109, 2
  %cond152 = select i1 %cmp147, i32 %and41, i32 %cond146
  %cmp161 = icmp ugt i32 %and43, %and44
  %conv162 = zext i1 %cmp161 to i32
  %cmp163 = icmp ugt i32 %and43, %and45
  %conv164 = zext i1 %cmp163 to i32
  %cmp165 = icmp ugt i32 %and44, %and45
  %conv166 = zext i1 %cmp165 to i32
  %add167 = add nuw nsw i32 %conv164, %conv162
  %lnot.ext170 = xor i32 %conv162, 1
  %add171 = add nuw nsw i32 %lnot.ext170, %conv166
  %lnot.ext174 = xor i32 %conv164, 1
  %lnot.ext177 = xor i32 %conv166, 1
  %add178 = add nuw nsw i32 %lnot.ext174, %lnot.ext177
  %cmp179 = icmp eq i32 %add171, 0
  %cond184 = select i1 %cmp179, i32 %and44, i32 %and43
  %cmp185 = icmp eq i32 %add178, 0
  %cond190 = select i1 %cmp185, i32 %and45, i32 %cond184
  %cmp191 = icmp eq i32 %add167, 1
  %cond196 = select i1 %cmp191, i32 %and43, i32 %and44
  %cmp197 = icmp eq i32 %add178, 1
  %cond202 = select i1 %cmp197, i32 %and45, i32 %cond196
  %cmp203 = icmp eq i32 %add167, 2
  %cond208 = select i1 %cmp203, i32 %and43, i32 %and45
  %cmp209 = icmp eq i32 %add171, 2
  %cond214 = select i1 %cmp209, i32 %and44, i32 %cond208
  %cmp223 = icmp ule i32 %cond66, %cond128
  %cmp225 = icmp ule i32 %cond66, %cond190
  %cmp227 = icmp ugt i32 %cond128, %cond190
  %lnot.ext232 = zext i1 %cmp223 to i32
  %lnot.ext236 = zext i1 %cmp225 to i32
  %14 = zext i1 %cmp227 to i32
  %lnot.ext239 = xor i32 %14, 1
  %add233 = sext i1 %cmp227 to i32
  %cmp241 = icmp eq i32 %lnot.ext232, %add233
  %cond246 = select i1 %cmp241, i32 %cond128, i32 %cond66
  %add240 = sub nsw i32 0, %lnot.ext239
  %cmp247 = icmp eq i32 %lnot.ext236, %add240
  %cond252 = select i1 %cmp247, i32 %cond190, i32 %cond246
  %cmp285 = icmp ugt i32 %cond78, %cond140
  %conv286 = zext i1 %cmp285 to i32
  %cmp287 = icmp ugt i32 %cond78, %cond202
  %conv288 = zext i1 %cmp287 to i32
  %cmp289 = icmp ule i32 %cond140, %cond202
  %add291 = add nuw nsw i32 %conv288, %conv286
  %lnot.ext298 = xor i32 %conv288, 1
  %lnot.ext301 = zext i1 %cmp289 to i32
  %add302 = add nuw nsw i32 %lnot.ext298, %lnot.ext301
  %cmp315 = icmp eq i32 %add291, 1
  %cond320 = select i1 %cmp315, i32 %cond78, i32 %cond140
  %cmp321 = icmp eq i32 %add302, 1
  %cond326 = select i1 %cmp321, i32 %cond202, i32 %cond320
  %cmp347 = icmp ugt i32 %cond90, %cond152
  %conv348 = zext i1 %cmp347 to i32
  %cmp349 = icmp ugt i32 %cond90, %cond214
  %conv350 = zext i1 %cmp349 to i32
  %cmp351 = icmp ugt i32 %cond152, %cond214
  %conv352 = zext i1 %cmp351 to i32
  %add353 = add nuw nsw i32 %conv350, %conv348
  %lnot.ext356 = xor i32 %conv348, 1
  %add357 = add nuw nsw i32 %conv352, %lnot.ext356
  %cmp389 = icmp eq i32 %add353, 2
  %cond394 = select i1 %cmp389, i32 %cond90, i32 %cond214
  %cmp395 = icmp eq i32 %add357, 2
  %cond400 = select i1 %cmp395, i32 %cond152, i32 %cond394
  %cmp409 = icmp ugt i32 %cond252, %cond326
  %conv410 = zext i1 %cmp409 to i32
  %cmp411 = icmp ugt i32 %cond252, %cond400
  %conv412 = zext i1 %cmp411 to i32
  %cmp413 = icmp ule i32 %cond326, %cond400
  %add415 = add nuw nsw i32 %conv412, %conv410
  %lnot.ext422 = xor i32 %conv412, 1
  %lnot.ext425 = zext i1 %cmp413 to i32
  %add426 = add nuw nsw i32 %lnot.ext422, %lnot.ext425
  %cmp439 = icmp eq i32 %add415, 1
  %cond444 = select i1 %cmp439, i32 %cond252, i32 %cond326
  %cmp445 = icmp eq i32 %add426, 1
  %cond450 = select i1 %cmp445, i32 %cond400, i32 %cond444
  %conv463 = trunc i32 %cond450 to i8
  %arrayidx466 = getelementptr inbounds <4 x i8>, <4 x i8>* %out, i32 %add5
  %15 = load <4 x i8>, <4 x i8>* %arrayidx466, align 4
  %16 = insertelement <4 x i8> %15, i8 %conv463, i32 0
  %shr = lshr i32 %5, 8
  %shr467 = lshr i32 %8, 16
  %shr468 = lshr i32 %11, 16
  %shr470 = lshr i32 %9, 8
  %shr471 = lshr i32 %10, 8
  %shr473 = lshr i32 %12, 8
  %shr474 = lshr i32 %13, 8
  %and475 = and i32 %shr, 255
  %and478 = and i32 %shr467, 255
  %and479 = and i32 %shr470, 255
  %and480 = and i32 %shr471, 255
  %and481 = and i32 %shr468, 255
  %and482 = and i32 %shr473, 255
  %and483 = and i32 %shr474, 255
  %cmp492 = icmp ugt i32 %and475, %and38
  %conv493 = zext i1 %cmp492 to i32
  %cmp494 = icmp ugt i32 %and475, %and39
  %conv495 = zext i1 %cmp494 to i32
  %add498 = add nuw nsw i32 %conv495, %conv493
  %lnot.ext501 = xor i32 %conv493, 1
  %add502 = add nuw nsw i32 %lnot.ext501, %conv49
  %lnot.ext505 = xor i32 %conv495, 1
  %add509 = add nuw nsw i32 %lnot.ext505, %lnot.ext57
  %cmp510 = icmp eq i32 %add502, 0
  %cond515 = select i1 %cmp510, i32 %and38, i32 %and475
  %cmp516 = icmp eq i32 %add509, 0
  %cond521 = select i1 %cmp516, i32 %and39, i32 %cond515
  %cmp522 = icmp eq i32 %add498, 1
  %cond527 = select i1 %cmp522, i32 %and475, i32 %and38
  %cmp528 = icmp eq i32 %add509, 1
  %cond533 = select i1 %cmp528, i32 %and39, i32 %cond527
  %cmp534 = icmp eq i32 %add498, 2
  %cond539 = select i1 %cmp534, i32 %and475, i32 %and39
  %cmp540 = icmp eq i32 %add502, 2
  %cond545 = select i1 %cmp540, i32 %and38, i32 %cond539
  %cmp554 = icmp ugt i32 %and478, %and479
  %conv555 = zext i1 %cmp554 to i32
  %cmp556 = icmp ugt i32 %and478, %and480
  %conv557 = zext i1 %cmp556 to i32
  %cmp558 = icmp ugt i32 %and479, %and480
  %conv559 = zext i1 %cmp558 to i32
  %add560 = add nuw nsw i32 %conv557, %conv555
  %lnot.ext563 = xor i32 %conv555, 1
  %add564 = add nuw nsw i32 %lnot.ext563, %conv559
  %lnot.ext567 = xor i32 %conv557, 1
  %lnot.ext570 = xor i32 %conv559, 1
  %add571 = add nuw nsw i32 %lnot.ext567, %lnot.ext570
  %cmp572 = icmp eq i32 %add564, 0
  %cond577 = select i1 %cmp572, i32 %and479, i32 %and478
  %cmp578 = icmp eq i32 %add571, 0
  %cond583 = select i1 %cmp578, i32 %and480, i32 %cond577
  %cmp584 = icmp eq i32 %add560, 1
  %cond589 = select i1 %cmp584, i32 %and478, i32 %and479
  %cmp590 = icmp eq i32 %add571, 1
  %cond595 = select i1 %cmp590, i32 %and480, i32 %cond589
  %cmp596 = icmp eq i32 %add560, 2
  %cond601 = select i1 %cmp596, i32 %and478, i32 %and480
  %cmp602 = icmp eq i32 %add564, 2
  %cond607 = select i1 %cmp602, i32 %and479, i32 %cond601
  %cmp616 = icmp ugt i32 %and481, %and482
  %conv617 = zext i1 %cmp616 to i32
  %cmp618 = icmp ugt i32 %and481, %and483
  %conv619 = zext i1 %cmp618 to i32
  %cmp620 = icmp ugt i32 %and482, %and483
  %conv621 = zext i1 %cmp620 to i32
  %add622 = add nuw nsw i32 %conv619, %conv617
  %lnot.ext625 = xor i32 %conv617, 1
  %add626 = add nuw nsw i32 %lnot.ext625, %conv621
  %lnot.ext629 = xor i32 %conv619, 1
  %lnot.ext632 = xor i32 %conv621, 1
  %add633 = add nuw nsw i32 %lnot.ext629, %lnot.ext632
  %cmp634 = icmp eq i32 %add626, 0
  %cond639 = select i1 %cmp634, i32 %and482, i32 %and481
  %cmp640 = icmp eq i32 %add633, 0
  %cond645 = select i1 %cmp640, i32 %and483, i32 %cond639
  %cmp646 = icmp eq i32 %add622, 1
  %cond651 = select i1 %cmp646, i32 %and481, i32 %and482
  %cmp652 = icmp eq i32 %add633, 1
  %cond657 = select i1 %cmp652, i32 %and483, i32 %cond651
  %cmp658 = icmp eq i32 %add622, 2
  %cond663 = select i1 %cmp658, i32 %and481, i32 %and483
  %cmp664 = icmp eq i32 %add626, 2
  %cond669 = select i1 %cmp664, i32 %and482, i32 %cond663
  %cmp678 = icmp ule i32 %cond521, %cond583
  %cmp680 = icmp ule i32 %cond521, %cond645
  %cmp682 = icmp ugt i32 %cond583, %cond645
  %lnot.ext687 = zext i1 %cmp678 to i32
  %lnot.ext691 = zext i1 %cmp680 to i32
  %17 = zext i1 %cmp682 to i32
  %lnot.ext694 = xor i32 %17, 1
  %add688 = sext i1 %cmp682 to i32
  %cmp696 = icmp eq i32 %lnot.ext687, %add688
  %cond701 = select i1 %cmp696, i32 %cond583, i32 %cond521
  %add695 = sub nsw i32 0, %lnot.ext694
  %cmp702 = icmp eq i32 %lnot.ext691, %add695
  %cond707 = select i1 %cmp702, i32 %cond645, i32 %cond701
  %cmp740 = icmp ugt i32 %cond533, %cond595
  %conv741 = zext i1 %cmp740 to i32
  %cmp742 = icmp ugt i32 %cond533, %cond657
  %conv743 = zext i1 %cmp742 to i32
  %cmp744 = icmp ule i32 %cond595, %cond657
  %add746 = add nuw nsw i32 %conv743, %conv741
  %lnot.ext753 = xor i32 %conv743, 1
  %lnot.ext756 = zext i1 %cmp744 to i32
  %add757 = add nuw nsw i32 %lnot.ext753, %lnot.ext756
  %cmp770 = icmp eq i32 %add746, 1
  %cond775 = select i1 %cmp770, i32 %cond533, i32 %cond595
  %cmp776 = icmp eq i32 %add757, 1
  %cond781 = select i1 %cmp776, i32 %cond657, i32 %cond775
  %cmp802 = icmp ugt i32 %cond545, %cond607
  %conv803 = zext i1 %cmp802 to i32
  %cmp804 = icmp ugt i32 %cond545, %cond669
  %conv805 = zext i1 %cmp804 to i32
  %cmp806 = icmp ugt i32 %cond607, %cond669
  %conv807 = zext i1 %cmp806 to i32
  %add808 = add nuw nsw i32 %conv805, %conv803
  %lnot.ext811 = xor i32 %conv803, 1
  %add812 = add nuw nsw i32 %conv807, %lnot.ext811
  %cmp844 = icmp eq i32 %add808, 2
  %cond849 = select i1 %cmp844, i32 %cond545, i32 %cond669
  %cmp850 = icmp eq i32 %add812, 2
  %cond855 = select i1 %cmp850, i32 %cond607, i32 %cond849
  %cmp864 = icmp ugt i32 %cond707, %cond781
  %conv865 = zext i1 %cmp864 to i32
  %cmp866 = icmp ugt i32 %cond707, %cond855
  %conv867 = zext i1 %cmp866 to i32
  %cmp868 = icmp ule i32 %cond781, %cond855
  %add870 = add nuw nsw i32 %conv867, %conv865
  %lnot.ext877 = xor i32 %conv867, 1
  %lnot.ext880 = zext i1 %cmp868 to i32
  %add881 = add nuw nsw i32 %lnot.ext877, %lnot.ext880
  %cmp894 = icmp eq i32 %add870, 1
  %cond899 = select i1 %cmp894, i32 %cond707, i32 %cond781
  %cmp900 = icmp eq i32 %add881, 1
  %cond905 = select i1 %cmp900, i32 %cond855, i32 %cond899
  %conv918 = trunc i32 %cond905 to i8
  %18 = insertelement <4 x i8> %16, i8 %conv918, i32 1
  %shr922 = lshr i32 %5, 16
  %shr926 = lshr i32 %9, 16
  %shr927 = lshr i32 %10, 16
  %shr929 = lshr i32 %12, 16
  %shr930 = lshr i32 %13, 16
  %and931 = and i32 %shr922, 255
  %and935 = and i32 %shr926, 255
  %and936 = and i32 %shr927, 255
  %and938 = and i32 %shr929, 255
  %and939 = and i32 %shr930, 255
  %cmp948 = icmp ugt i32 %and931, %and38
  %conv949 = zext i1 %cmp948 to i32
  %cmp950 = icmp ugt i32 %and931, %and39
  %conv951 = zext i1 %cmp950 to i32
  %add954 = add nuw nsw i32 %conv951, %conv949
  %lnot.ext957 = xor i32 %conv949, 1
  %add958 = add nuw nsw i32 %lnot.ext957, %conv49
  %lnot.ext961 = xor i32 %conv951, 1
  %add965 = add nuw nsw i32 %lnot.ext961, %lnot.ext57
  %cmp966 = icmp eq i32 %add958, 0
  %cond971 = select i1 %cmp966, i32 %and38, i32 %and931
  %cmp972 = icmp eq i32 %add965, 0
  %cond977 = select i1 %cmp972, i32 %and39, i32 %cond971
  %cmp978 = icmp eq i32 %add954, 1
  %cond983 = select i1 %cmp978, i32 %and931, i32 %and38
  %cmp984 = icmp eq i32 %add965, 1
  %cond989 = select i1 %cmp984, i32 %and39, i32 %cond983
  %cmp990 = icmp eq i32 %add954, 2
  %cond995 = select i1 %cmp990, i32 %and931, i32 %and39
  %cmp996 = icmp eq i32 %add958, 2
  %cond1001 = select i1 %cmp996, i32 %and38, i32 %cond995
  %cmp1014 = icmp ugt i32 %and935, %and936
  %19 = zext i1 %cmp1014 to i32
  %add1027 = sub nsw i32 2, %19
  %cmp1034 = icmp eq i32 %add1027, 0
  %cond1039 = select i1 %cmp1034, i32 %and936, i32 0
  %cmp1046 = icmp eq i32 %add1027, 1
  %cond1051 = select i1 %cmp1046, i32 %and936, i32 %and935
  %cond1063 = select i1 %cmp1014, i32 %and935, i32 %and936
  %cmp1076 = icmp ugt i32 %and938, %and939
  %20 = zext i1 %cmp1076 to i32
  %add1089 = sub nsw i32 2, %20
  %cmp1096 = icmp eq i32 %add1089, 0
  %cond1101 = select i1 %cmp1096, i32 %and939, i32 0
  %cmp1108 = icmp eq i32 %add1089, 1
  %cond1113 = select i1 %cmp1108, i32 %and939, i32 %and938
  %cond1125 = select i1 %cmp1076, i32 %and938, i32 %and939
  %cmp1134 = icmp ule i32 %cond977, %cond1039
  %cmp1136 = icmp ule i32 %cond977, %cond1101
  %cmp1138 = icmp ugt i32 %cond1039, %cond1101
  %lnot.ext1143 = zext i1 %cmp1134 to i32
  %lnot.ext1147 = zext i1 %cmp1136 to i32
  %21 = zext i1 %cmp1138 to i32
  %lnot.ext1150 = xor i32 %21, 1
  %add1144 = sext i1 %cmp1138 to i32
  %cmp1152 = icmp eq i32 %lnot.ext1143, %add1144
  %cond1157 = select i1 %cmp1152, i32 %cond1039, i32 %cond977
  %add1151 = sub nsw i32 0, %lnot.ext1150
  %cmp1158 = icmp eq i32 %lnot.ext1147, %add1151
  %cond1163 = select i1 %cmp1158, i32 %cond1101, i32 %cond1157
  %cmp1196 = icmp ugt i32 %cond989, %cond1051
  %conv1197 = zext i1 %cmp1196 to i32
  %cmp1198 = icmp ugt i32 %cond989, %cond1113
  %conv1199 = zext i1 %cmp1198 to i32
  %cmp1200 = icmp ule i32 %cond1051, %cond1113
  %add1202 = add nuw nsw i32 %conv1199, %conv1197
  %lnot.ext1209 = xor i32 %conv1199, 1
  %lnot.ext1212 = zext i1 %cmp1200 to i32
  %add1213 = add nuw nsw i32 %lnot.ext1209, %lnot.ext1212
  %cmp1226 = icmp eq i32 %add1202, 1
  %cond1231 = select i1 %cmp1226, i32 %cond989, i32 %cond1051
  %cmp1232 = icmp eq i32 %add1213, 1
  %cond1237 = select i1 %cmp1232, i32 %cond1113, i32 %cond1231
  %cmp1258 = icmp ugt i32 %cond1001, %cond1063
  %conv1259 = zext i1 %cmp1258 to i32
  %cmp1260 = icmp ugt i32 %cond1001, %cond1125
  %conv1261 = zext i1 %cmp1260 to i32
  %cmp1262 = icmp ugt i32 %cond1063, %cond1125
  %conv1263 = zext i1 %cmp1262 to i32
  %add1264 = add nuw nsw i32 %conv1261, %conv1259
  %lnot.ext1267 = xor i32 %conv1259, 1
  %add1268 = add nuw nsw i32 %conv1263, %lnot.ext1267
  %cmp1300 = icmp eq i32 %add1264, 2
  %cond1305 = select i1 %cmp1300, i32 %cond1001, i32 %cond1125
  %cmp1306 = icmp eq i32 %add1268, 2
  %cond1311 = select i1 %cmp1306, i32 %cond1063, i32 %cond1305
  %cmp1320 = icmp ugt i32 %cond1163, %cond1237
  %conv1321 = zext i1 %cmp1320 to i32
  %cmp1322 = icmp ugt i32 %cond1163, %cond1311
  %conv1323 = zext i1 %cmp1322 to i32
  %cmp1324 = icmp ule i32 %cond1237, %cond1311
  %add1326 = add nuw nsw i32 %conv1321, %conv1323
  %lnot.ext1333 = xor i32 %conv1323, 1
  %lnot.ext1336 = zext i1 %cmp1324 to i32
  %add1337 = add nuw nsw i32 %lnot.ext1333, %lnot.ext1336
  %cmp1350 = icmp eq i32 %add1326, 1
  %cond1355 = select i1 %cmp1350, i32 %cond1163, i32 %cond1237
  %cmp1356 = icmp eq i32 %add1337, 1
  %cond1361 = select i1 %cmp1356, i32 %cond1311, i32 %cond1355
  %conv1374 = trunc i32 %cond1361 to i8
  %22 = insertelement <4 x i8> %18, i8 %conv1374, i32 2
  store <4 x i8> %22, <4 x i8>* %arrayidx466, align 4
  ret void
}

attributes #0 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="mips32r2" "target-features"="+mips32r2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }

!opencl.kernels = !{!0}
!llvm.ident = !{!6}

!0 = !{void (i32*, <4 x i8>*)* @median, !1, !2, !3, !4, !5}
!1 = !{!"kernel_arg_addr_space", i32 0, i32 0}
!2 = !{!"kernel_arg_access_qual", !"none", !"none"}
!3 = !{!"kernel_arg_type", !"uint*", !"uchar4*"}
!4 = !{!"kernel_arg_base_type", !"uint*", !"uchar __attribute__((ext_vector_type(4)))*"}
!5 = !{!"kernel_arg_type_qual", !"", !""}
!6 = !{!"clang version 3.7.0 (tags/RELEASE_371/final)"}
!7 = !{i32 15545}
!8 = !{i32 15685}
!9 = !{i32 15324}
!10 = !{!11, !11, i64 0}
!11 = !{!"int", !12, i64 0}
!12 = !{!"omnipotent char", !13, i64 0}
!13 = !{!"Simple C/C++ TBAA"}
