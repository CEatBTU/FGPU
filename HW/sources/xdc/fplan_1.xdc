
####################################################################################
# Generated by Vivado 2016.2 built on 'Thu Jun  2 16:32:35 MDT 2016' by 'xbuild'
# Command Used: write_xdc fplan_1.xdc
####################################################################################


####################################################################################
# Constraints from file : 'bd_design_clk_wiz_0_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'bd_design_rst_clk_wiz_0_250M_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------





####################################################################################
# Constraints from file : 'bd_design_processing_system7_0_0.xdc'
####################################################################################

############################################################################
##
##  Xilinx, Inc. 2006            www.xilinx.com
############################################################################
##  File name :       ps7_constraints.xdc
##
##  Details :     Constraints file
##                    FPGA family:       zynq
##                    FPGA:              xc7z045ffg900-2
##                    Device Size:        xc7z045
##                    Package:            ffg900
##                    Speedgrade:         -2
##
##
############################################################################
############################################################################
############################################################################
# Clock constraints                                                        #
############################################################################
current_instance bd_design_i/processing_system7_0/inst
create_clock -period 20.000 -name clk_fpga_0 [get_pins {PS7_i/FCLKCLK[0]}]
set_input_jitter clk_fpga_0 0.600
#The clocks are asynchronous, user should constrain them appropriately.#


############################################################################
# I/O STANDARDS and Location Constraints                                   #
############################################################################

#  Enet 0 / mdio / MIO[53]
#  Enet 0 / mdc / MIO[52]
#  I2C 0 / sda / MIO[51]
#  I2C 0 / scl / MIO[50]
#  UART 1 / rx / MIO[49]
#  UART 1 / tx / MIO[48]
#  ENET Reset / reset / MIO[47]
#  I2C Reset / reset / MIO[46]
#  SD 0 / data[3] / MIO[45]
#  SD 0 / data[2] / MIO[44]
#  SD 0 / data[1] / MIO[43]
#  SD 0 / data[0] / MIO[42]
#  SD 0 / cmd / MIO[41]
#  SD 0 / clk / MIO[40]
#  USB 0 / data[7] / MIO[39]
#  USB 0 / data[6] / MIO[38]
#  USB 0 / data[5] / MIO[37]
#  USB 0 / clk / MIO[36]
#  USB 0 / data[3] / MIO[35]
#  USB 0 / data[2] / MIO[34]
#  USB 0 / data[1] / MIO[33]
#  USB 0 / data[0] / MIO[32]
#  USB 0 / nxt / MIO[31]
#  USB 0 / stp / MIO[30]
#  USB 0 / dir / MIO[29]
#  USB 0 / data[4] / MIO[28]
#  Enet 0 / rx_ctl / MIO[27]
#  Enet 0 / rxd[3] / MIO[26]
#  Enet 0 / rxd[2] / MIO[25]
#  Enet 0 / rxd[1] / MIO[24]
#  Enet 0 / rxd[0] / MIO[23]
#  Enet 0 / rx_clk / MIO[22]
#  Enet 0 / tx_ctl / MIO[21]
#  Enet 0 / txd[3] / MIO[20]
#  Enet 0 / txd[2] / MIO[19]
#  Enet 0 / txd[1] / MIO[18]
#  Enet 0 / txd[0] / MIO[17]
#  Enet 0 / tx_clk / MIO[16]
#  SD 0 / wp / MIO[15]
#  SD 0 / cd / MIO[14]
#  Quad SPI Flash / qspi1_io[3] / MIO[13]
#  Quad SPI Flash / qspi1_io[2] / MIO[12]
#  Quad SPI Flash / qspi1_io[1] / MIO[11]
#  Quad SPI Flash / qspi1_io[0] / MIO[10]
#  Quad SPI Flash / qspi1_sclk / MIO[9]
#  Quad SPI Flash / qspi_fbclk / MIO[8]
#  USB Reset / reset / MIO[7]
#  Quad SPI Flash / qspi0_sclk / MIO[6]
#  Quad SPI Flash / qspi0_io[3] / MIO[5]
#  Quad SPI Flash / qspi0_io[2] / MIO[4]
#  Quad SPI Flash / qspi0_io[1] / MIO[3]
#  Quad SPI Flash / qspi0_io[0] / MIO[2]
#  Quad SPI Flash / qspi0_ss_b / MIO[1]
#  Quad SPI Flash / qspi1_ss_b / MIO[0]



####################################################################################
# Constraints from file : 'bd_design_clk_wiz_0_0.xdc'
####################################################################################


# file: bd_design_clk_wiz_0_0.xdc
#
# (c) Copyright 2008 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#

# Input clock periods. These duplicate the values entered for the
# input clocks. You can use these to time your system. If required
# commented constraints can be used in the top level xdc
#----------------------------------------------------------------
# Connect to input port when clock capable pin is selected for input
current_instance -quiet
current_instance bd_design_i/clk_wiz_0/inst
create_clock -period 20.000 [get_ports -scoped_to_current_instance clk_in1]
set_input_jitter [get_clocks -of_objects [get_ports -scoped_to_current_instance clk_in1]] 0.200




####################################################################################
# Constraints from file : 'bd_design_rst_clk_wiz_0_250M_0.xdc'
####################################################################################


# file: bd_design_rst_clk_wiz_0_250M_0.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.

current_instance -quiet
current_instance bd_design_i/rst_clk_wiz_0_250M/U0
set_false_path -to [get_pins -hier *cdc_to*/D]




####################################################################################
# Constraints from file : 'fplan.xdc'
####################################################################################


####################################################################################
# Generated by Vivado 2016.2 built on 'Thu Jun  2 16:32:35 MDT 2016' by 'xbuild'
####################################################################################


####################################################################################
# Constraints from file : 'bd_design_clk_wiz_0_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------



####################################################################################
# Constraints from file : 'bd_design_rst_clk_wiz_0_250M_0_board.xdc'
####################################################################################

#--------------------Physical Constraints-----------------





####################################################################################
# Constraints from file : 'bd_design_processing_system7_0_0.xdc'
####################################################################################

############################################################################
##
##  Xilinx, Inc. 2006            www.xilinx.com
############################################################################
##  File name :       ps7_constraints.xdc
##
##  Details :     Constraints file
##                    FPGA family:       zynq
##                    FPGA:              xc7z045ffg900-2
##                    Device Size:        xc7z045
##                    Package:            ffg900
##                    Speedgrade:         -2
##
##
############################################################################
############################################################################
############################################################################
# Clock constraints                                                        #
############################################################################
current_instance -quiet
current_instance bd_design_i/processing_system7_0/inst
create_clock -period 20.000 -name clk_fpga_0 [get_pins {PS7_i/FCLKCLK[0]}]
set_input_jitter clk_fpga_0 0.600
#The clocks are asynchronous, user should constrain them appropriately.#


############################################################################
# I/O STANDARDS and Location Constraints                                   #
############################################################################

#  Enet 0 / mdio / MIO[53]
current_instance -quiet
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[53]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[53]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[53]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[53]}]
#  Enet 0 / mdc / MIO[52]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[52]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[52]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[52]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[52]}]
#  I2C 0 / sda / MIO[51]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[51]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[51]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[51]}]
set_property PULLUP true [get_ports {FIXED_IO_mio[51]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[51]}]
#  I2C 0 / scl / MIO[50]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[50]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[50]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[50]}]
set_property PULLUP true [get_ports {FIXED_IO_mio[50]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[50]}]
#  UART 1 / rx / MIO[49]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[49]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[49]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[49]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[49]}]
#  UART 1 / tx / MIO[48]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[48]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[48]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[48]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[48]}]
#  ENET Reset / reset / MIO[47]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[47]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[47]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[47]}]
set_property PULLUP true [get_ports {FIXED_IO_mio[47]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[47]}]
#  I2C Reset / reset / MIO[46]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[46]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[46]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[46]}]
set_property PULLUP true [get_ports {FIXED_IO_mio[46]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[46]}]
#  SD 0 / data[3] / MIO[45]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[45]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[45]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[45]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[45]}]
#  SD 0 / data[2] / MIO[44]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[44]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[44]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[44]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[44]}]
#  SD 0 / data[1] / MIO[43]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[43]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[43]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[43]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[43]}]
#  SD 0 / data[0] / MIO[42]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[42]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[42]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[42]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[42]}]
#  SD 0 / cmd / MIO[41]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[41]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[41]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[41]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[41]}]
#  SD 0 / clk / MIO[40]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[40]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[40]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[40]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[40]}]
#  USB 0 / data[7] / MIO[39]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[39]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[39]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[39]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[39]}]
#  USB 0 / data[6] / MIO[38]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[38]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[38]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[38]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[38]}]
#  USB 0 / data[5] / MIO[37]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[37]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[37]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[37]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[37]}]
#  USB 0 / clk / MIO[36]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[36]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[36]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[36]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[36]}]
#  USB 0 / data[3] / MIO[35]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[35]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[35]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[35]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[35]}]
#  USB 0 / data[2] / MIO[34]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[34]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[34]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[34]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[34]}]
#  USB 0 / data[1] / MIO[33]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[33]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[33]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[33]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[33]}]
#  USB 0 / data[0] / MIO[32]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[32]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[32]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[32]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[32]}]
#  USB 0 / nxt / MIO[31]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[31]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[31]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[31]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[31]}]
#  USB 0 / stp / MIO[30]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[30]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[30]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[30]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[30]}]
#  USB 0 / dir / MIO[29]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[29]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[29]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[29]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[29]}]
#  USB 0 / data[4] / MIO[28]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[28]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[28]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[28]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[28]}]
#  Enet 0 / rx_ctl / MIO[27]
set_property IOSTANDARD HSTL_I_18 [get_ports {FIXED_IO_mio[27]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[27]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[27]}]
#  Enet 0 / rxd[3] / MIO[26]
set_property IOSTANDARD HSTL_I_18 [get_ports {FIXED_IO_mio[26]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[26]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[26]}]
#  Enet 0 / rxd[2] / MIO[25]
set_property IOSTANDARD HSTL_I_18 [get_ports {FIXED_IO_mio[25]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[25]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[25]}]
#  Enet 0 / rxd[1] / MIO[24]
set_property IOSTANDARD HSTL_I_18 [get_ports {FIXED_IO_mio[24]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[24]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[24]}]
#  Enet 0 / rxd[0] / MIO[23]
set_property IOSTANDARD HSTL_I_18 [get_ports {FIXED_IO_mio[23]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[23]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[23]}]
#  Enet 0 / rx_clk / MIO[22]
set_property IOSTANDARD HSTL_I_18 [get_ports {FIXED_IO_mio[22]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[22]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[22]}]
#  Enet 0 / tx_ctl / MIO[21]
set_property IOSTANDARD HSTL_I_18 [get_ports {FIXED_IO_mio[21]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[21]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[21]}]
#  Enet 0 / txd[3] / MIO[20]
set_property IOSTANDARD HSTL_I_18 [get_ports {FIXED_IO_mio[20]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[20]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[20]}]
#  Enet 0 / txd[2] / MIO[19]
set_property IOSTANDARD HSTL_I_18 [get_ports {FIXED_IO_mio[19]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[19]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[19]}]
#  Enet 0 / txd[1] / MIO[18]
set_property IOSTANDARD HSTL_I_18 [get_ports {FIXED_IO_mio[18]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[18]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[18]}]
#  Enet 0 / txd[0] / MIO[17]
set_property IOSTANDARD HSTL_I_18 [get_ports {FIXED_IO_mio[17]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[17]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[17]}]
#  Enet 0 / tx_clk / MIO[16]
set_property IOSTANDARD HSTL_I_18 [get_ports {FIXED_IO_mio[16]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[16]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[16]}]
#  SD 0 / wp / MIO[15]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[15]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[15]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[15]}]
set_property PULLUP true [get_ports {FIXED_IO_mio[15]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[15]}]
#  SD 0 / cd / MIO[14]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[14]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[14]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[14]}]
set_property PULLUP true [get_ports {FIXED_IO_mio[14]}]
set_property PIO_DIRECTION INPUT [get_ports {FIXED_IO_mio[14]}]
#  Quad SPI Flash / qspi1_io[3] / MIO[13]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[13]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[13]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[13]}]
set_property PULLUP true [get_ports {FIXED_IO_mio[13]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[13]}]
#  Quad SPI Flash / qspi1_io[2] / MIO[12]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[12]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[12]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[12]}]
set_property PULLUP true [get_ports {FIXED_IO_mio[12]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[12]}]
#  Quad SPI Flash / qspi1_io[1] / MIO[11]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[11]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[11]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[11]}]
set_property PULLUP true [get_ports {FIXED_IO_mio[11]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[11]}]
#  Quad SPI Flash / qspi1_io[0] / MIO[10]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[10]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[10]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[10]}]
set_property PULLUP true [get_ports {FIXED_IO_mio[10]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[10]}]
#  Quad SPI Flash / qspi1_sclk / MIO[9]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[9]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[9]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[9]}]
set_property PULLUP true [get_ports {FIXED_IO_mio[9]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[9]}]
#  Quad SPI Flash / qspi_fbclk / MIO[8]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[8]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[8]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[8]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[8]}]
#  USB Reset / reset / MIO[7]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[7]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[7]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[7]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[7]}]
#  Quad SPI Flash / qspi0_sclk / MIO[6]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[6]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[6]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[6]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[6]}]
#  Quad SPI Flash / qspi0_io[3] / MIO[5]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[5]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[5]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[5]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[5]}]
#  Quad SPI Flash / qspi0_io[2] / MIO[4]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[4]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[4]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[4]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[4]}]
#  Quad SPI Flash / qspi0_io[1] / MIO[3]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[3]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[3]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[3]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[3]}]
#  Quad SPI Flash / qspi0_io[0] / MIO[2]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[2]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[2]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[2]}]
set_property PIO_DIRECTION BIDIR [get_ports {FIXED_IO_mio[2]}]
#  Quad SPI Flash / qspi0_ss_b / MIO[1]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[1]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[1]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[1]}]
set_property PULLUP true [get_ports {FIXED_IO_mio[1]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[1]}]
#  Quad SPI Flash / qspi1_ss_b / MIO[0]
set_property IOSTANDARD LVCMOS18 [get_ports {FIXED_IO_mio[0]}]
set_property SLEW SLOW [get_ports {FIXED_IO_mio[0]}]
set_property DRIVE 8 [get_ports {FIXED_IO_mio[0]}]
set_property PULLUP true [get_ports {FIXED_IO_mio[0]}]
set_property PIO_DIRECTION OUTPUT [get_ports {FIXED_IO_mio[0]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports FIXED_IO_ddr_vrp]
set_property SLEW FAST [get_ports FIXED_IO_ddr_vrp]
set_property PIO_DIRECTION BIDIR [get_ports FIXED_IO_ddr_vrp]
set_property IOSTANDARD SSTL15_T_DCI [get_ports FIXED_IO_ddr_vrn]
set_property SLEW FAST [get_ports FIXED_IO_ddr_vrn]
set_property PIO_DIRECTION BIDIR [get_ports FIXED_IO_ddr_vrn]
set_property IOSTANDARD SSTL15 [get_ports DDR_we_n]
set_property SLEW SLOW [get_ports DDR_we_n]
set_property PIO_DIRECTION OUTPUT [get_ports DDR_we_n]
set_property IOSTANDARD SSTL15 [get_ports DDR_ras_n]
set_property SLEW SLOW [get_ports DDR_ras_n]
set_property PIO_DIRECTION OUTPUT [get_ports DDR_ras_n]
set_property IOSTANDARD SSTL15 [get_ports DDR_odt]
set_property SLEW SLOW [get_ports DDR_odt]
set_property PIO_DIRECTION OUTPUT [get_ports DDR_odt]
set_property IOSTANDARD SSTL15 [get_ports DDR_reset_n]
set_property SLEW FAST [get_ports DDR_reset_n]
set_property PIO_DIRECTION BIDIR [get_ports DDR_reset_n]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_p[3]}]
set_property SLEW FAST [get_ports {DDR_dqs_p[3]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_p[3]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_p[2]}]
set_property SLEW FAST [get_ports {DDR_dqs_p[2]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_p[2]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_p[1]}]
set_property SLEW FAST [get_ports {DDR_dqs_p[1]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_p[1]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_p[0]}]
set_property SLEW FAST [get_ports {DDR_dqs_p[0]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_p[0]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_n[3]}]
set_property SLEW FAST [get_ports {DDR_dqs_n[3]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_n[3]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_n[2]}]
set_property SLEW FAST [get_ports {DDR_dqs_n[2]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_n[2]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_n[1]}]
set_property SLEW FAST [get_ports {DDR_dqs_n[1]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_n[1]}]
set_property IOSTANDARD DIFF_SSTL15_T_DCI [get_ports {DDR_dqs_n[0]}]
set_property SLEW FAST [get_ports {DDR_dqs_n[0]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dqs_n[0]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[9]}]
set_property SLEW FAST [get_ports {DDR_dq[9]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[9]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[8]}]
set_property SLEW FAST [get_ports {DDR_dq[8]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[8]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[7]}]
set_property SLEW FAST [get_ports {DDR_dq[7]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[7]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[6]}]
set_property SLEW FAST [get_ports {DDR_dq[6]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[6]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[5]}]
set_property SLEW FAST [get_ports {DDR_dq[5]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[5]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[4]}]
set_property SLEW FAST [get_ports {DDR_dq[4]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[4]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[3]}]
set_property SLEW FAST [get_ports {DDR_dq[3]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[3]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[31]}]
set_property SLEW FAST [get_ports {DDR_dq[31]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[31]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[30]}]
set_property SLEW FAST [get_ports {DDR_dq[30]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[30]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[2]}]
set_property SLEW FAST [get_ports {DDR_dq[2]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[2]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[29]}]
set_property SLEW FAST [get_ports {DDR_dq[29]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[29]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[28]}]
set_property SLEW FAST [get_ports {DDR_dq[28]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[28]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[27]}]
set_property SLEW FAST [get_ports {DDR_dq[27]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[27]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[26]}]
set_property SLEW FAST [get_ports {DDR_dq[26]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[26]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[25]}]
set_property SLEW FAST [get_ports {DDR_dq[25]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[25]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[24]}]
set_property SLEW FAST [get_ports {DDR_dq[24]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[24]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[23]}]
set_property SLEW FAST [get_ports {DDR_dq[23]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[23]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[22]}]
set_property SLEW FAST [get_ports {DDR_dq[22]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[22]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[21]}]
set_property SLEW FAST [get_ports {DDR_dq[21]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[21]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[20]}]
set_property SLEW FAST [get_ports {DDR_dq[20]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[20]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[1]}]
set_property SLEW FAST [get_ports {DDR_dq[1]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[1]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[19]}]
set_property SLEW FAST [get_ports {DDR_dq[19]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[19]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[18]}]
set_property SLEW FAST [get_ports {DDR_dq[18]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[18]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[17]}]
set_property SLEW FAST [get_ports {DDR_dq[17]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[17]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[16]}]
set_property SLEW FAST [get_ports {DDR_dq[16]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[16]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[15]}]
set_property SLEW FAST [get_ports {DDR_dq[15]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[15]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[14]}]
set_property SLEW FAST [get_ports {DDR_dq[14]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[14]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[13]}]
set_property SLEW FAST [get_ports {DDR_dq[13]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[13]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[12]}]
set_property SLEW FAST [get_ports {DDR_dq[12]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[12]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[11]}]
set_property SLEW FAST [get_ports {DDR_dq[11]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[11]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[10]}]
set_property SLEW FAST [get_ports {DDR_dq[10]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[10]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dq[0]}]
set_property SLEW FAST [get_ports {DDR_dq[0]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dq[0]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dm[3]}]
set_property SLEW FAST [get_ports {DDR_dm[3]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dm[3]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dm[2]}]
set_property SLEW FAST [get_ports {DDR_dm[2]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dm[2]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dm[1]}]
set_property SLEW FAST [get_ports {DDR_dm[1]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dm[1]}]
set_property IOSTANDARD SSTL15_T_DCI [get_ports {DDR_dm[0]}]
set_property SLEW FAST [get_ports {DDR_dm[0]}]
set_property PIO_DIRECTION BIDIR [get_ports {DDR_dm[0]}]
set_property IOSTANDARD SSTL15 [get_ports DDR_cs_n]
set_property SLEW SLOW [get_ports DDR_cs_n]
set_property PIO_DIRECTION OUTPUT [get_ports DDR_cs_n]
set_property IOSTANDARD SSTL15 [get_ports DDR_cke]
set_property SLEW SLOW [get_ports DDR_cke]
set_property PIO_DIRECTION OUTPUT [get_ports DDR_cke]
set_property IOSTANDARD DIFF_SSTL15 [get_ports DDR_ck_p]
set_property SLEW FAST [get_ports DDR_ck_p]
set_property PIO_DIRECTION INPUT [get_ports DDR_ck_p]
set_property IOSTANDARD DIFF_SSTL15 [get_ports DDR_ck_n]
set_property SLEW FAST [get_ports DDR_ck_n]
set_property PIO_DIRECTION INPUT [get_ports DDR_ck_n]
set_property IOSTANDARD SSTL15 [get_ports DDR_cas_n]
set_property SLEW SLOW [get_ports DDR_cas_n]
set_property PIO_DIRECTION OUTPUT [get_ports DDR_cas_n]
set_property IOSTANDARD SSTL15 [get_ports {DDR_ba[2]}]
set_property SLEW SLOW [get_ports {DDR_ba[2]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_ba[2]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_ba[1]}]
set_property SLEW SLOW [get_ports {DDR_ba[1]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_ba[1]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_ba[0]}]
set_property SLEW SLOW [get_ports {DDR_ba[0]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_ba[0]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[9]}]
set_property SLEW SLOW [get_ports {DDR_addr[9]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[9]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[8]}]
set_property SLEW SLOW [get_ports {DDR_addr[8]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[8]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[7]}]
set_property SLEW SLOW [get_ports {DDR_addr[7]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[7]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[6]}]
set_property SLEW SLOW [get_ports {DDR_addr[6]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[6]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[5]}]
set_property SLEW SLOW [get_ports {DDR_addr[5]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[5]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[4]}]
set_property SLEW SLOW [get_ports {DDR_addr[4]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[4]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[3]}]
set_property SLEW SLOW [get_ports {DDR_addr[3]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[3]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[2]}]
set_property SLEW SLOW [get_ports {DDR_addr[2]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[2]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[1]}]
set_property SLEW SLOW [get_ports {DDR_addr[1]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[1]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[14]}]
set_property SLEW SLOW [get_ports {DDR_addr[14]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[14]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[13]}]
set_property SLEW SLOW [get_ports {DDR_addr[13]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[13]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[12]}]
set_property SLEW SLOW [get_ports {DDR_addr[12]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[12]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[11]}]
set_property SLEW SLOW [get_ports {DDR_addr[11]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[11]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[10]}]
set_property SLEW SLOW [get_ports {DDR_addr[10]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[10]}]
set_property IOSTANDARD SSTL15 [get_ports {DDR_addr[0]}]
set_property SLEW SLOW [get_ports {DDR_addr[0]}]
set_property PIO_DIRECTION OUTPUT [get_ports {DDR_addr[0]}]
set_property IOSTANDARD LVCMOS18 [get_ports FIXED_IO_ps_porb]
set_property SLEW SLOW [get_ports FIXED_IO_ps_porb]
set_property DRIVE 8 [get_ports FIXED_IO_ps_porb]
set_property IOSTANDARD HSTL_I_18 [get_ports FIXED_IO_ps_srstb]
set_property SLEW SLOW [get_ports FIXED_IO_ps_srstb]
set_property IOSTANDARD LVCMOS18 [get_ports FIXED_IO_ps_clk]
set_property PACKAGE_PIN L23 [get_ports DDR_odt]
set_property PACKAGE_PIN A22 [get_ports FIXED_IO_ps_clk]
set_property PACKAGE_PIN J25 [get_ports DDR_ck_n]
set_property PACKAGE_PIN N24 [get_ports DDR_ras_n]
set_property PACKAGE_PIN D19 [get_ports {FIXED_IO_mio[52]}]
set_property PACKAGE_PIN F19 [get_ports {FIXED_IO_mio[51]}]
set_property PACKAGE_PIN A19 [get_ports {FIXED_IO_mio[50]}]
set_property PACKAGE_PIN C18 [get_ports {FIXED_IO_mio[53]}]
set_property PACKAGE_PIN C19 [get_ports {FIXED_IO_mio[48]}]
set_property PACKAGE_PIN A18 [get_ports {FIXED_IO_mio[47]}]
set_property PACKAGE_PIN F20 [get_ports {FIXED_IO_mio[46]}]
set_property PACKAGE_PIN H18 [get_ports {FIXED_IO_mio[45]}]
set_property PACKAGE_PIN E20 [get_ports {FIXED_IO_mio[44]}]
set_property PACKAGE_PIN E18 [get_ports {FIXED_IO_mio[43]}]
set_property PACKAGE_PIN D20 [get_ports {FIXED_IO_mio[42]}]
set_property PACKAGE_PIN J18 [get_ports {FIXED_IO_mio[41]}]
set_property PACKAGE_PIN B20 [get_ports {FIXED_IO_mio[40]}]
set_property PACKAGE_PIN D18 [get_ports {FIXED_IO_mio[49]}]
set_property PACKAGE_PIN A20 [get_ports {FIXED_IO_mio[38]}]
set_property PACKAGE_PIN B21 [get_ports {FIXED_IO_mio[37]}]
set_property PACKAGE_PIN H17 [get_ports {FIXED_IO_mio[36]}]
set_property PACKAGE_PIN G21 [get_ports {FIXED_IO_mio[35]}]
set_property PACKAGE_PIN K18 [get_ports {FIXED_IO_mio[34]}]
set_property PACKAGE_PIN G22 [get_ports {FIXED_IO_mio[33]}]
set_property PACKAGE_PIN K17 [get_ports {FIXED_IO_mio[32]}]
set_property PACKAGE_PIN H21 [get_ports {FIXED_IO_mio[31]}]
set_property PACKAGE_PIN L18 [get_ports {FIXED_IO_mio[30]}]
set_property PACKAGE_PIN F18 [get_ports {FIXED_IO_mio[39]}]
set_property PACKAGE_PIN L17 [get_ports {FIXED_IO_mio[28]}]
set_property PACKAGE_PIN G20 [get_ports {FIXED_IO_mio[27]}]
set_property PACKAGE_PIN M17 [get_ports {FIXED_IO_mio[26]}]
set_property PACKAGE_PIN G19 [get_ports {FIXED_IO_mio[25]}]
set_property PACKAGE_PIN M19 [get_ports {FIXED_IO_mio[24]}]
set_property PACKAGE_PIN J21 [get_ports {FIXED_IO_mio[23]}]
set_property PACKAGE_PIN L20 [get_ports {FIXED_IO_mio[22]}]
set_property PACKAGE_PIN J19 [get_ports {FIXED_IO_mio[21]}]
set_property PACKAGE_PIN M20 [get_ports {FIXED_IO_mio[20]}]
set_property PACKAGE_PIN H22 [get_ports {FIXED_IO_mio[29]}]
set_property PACKAGE_PIN K20 [get_ports {FIXED_IO_mio[18]}]
set_property PACKAGE_PIN K21 [get_ports {FIXED_IO_mio[17]}]
set_property PACKAGE_PIN L19 [get_ports {FIXED_IO_mio[16]}]
set_property PACKAGE_PIN C22 [get_ports {FIXED_IO_mio[15]}]
set_property PACKAGE_PIN B22 [get_ports {FIXED_IO_mio[14]}]
set_property PACKAGE_PIN F22 [get_ports {FIXED_IO_mio[13]}]
set_property PACKAGE_PIN E21 [get_ports {FIXED_IO_mio[12]}]
set_property PACKAGE_PIN A23 [get_ports {FIXED_IO_mio[11]}]
set_property PACKAGE_PIN E22 [get_ports {FIXED_IO_mio[10]}]
set_property PACKAGE_PIN J20 [get_ports {FIXED_IO_mio[19]}]
set_property PACKAGE_PIN C21 [get_ports {FIXED_IO_mio[8]}]
set_property PACKAGE_PIN B24 [get_ports {FIXED_IO_mio[7]}]
set_property PACKAGE_PIN D24 [get_ports {FIXED_IO_mio[6]}]
set_property PACKAGE_PIN C24 [get_ports {FIXED_IO_mio[5]}]
set_property PACKAGE_PIN L28 [get_ports {DDR_dqs_p[3]}]
set_property PACKAGE_PIN E23 [get_ports {FIXED_IO_mio[4]}]
set_property PACKAGE_PIN C23 [get_ports {FIXED_IO_mio[3]}]
set_property PACKAGE_PIN F23 [get_ports {FIXED_IO_mio[2]}]
set_property PACKAGE_PIN D23 [get_ports {FIXED_IO_mio[1]}]
set_property PACKAGE_PIN N23 [get_ports DDR_we_n]
set_property PACKAGE_PIN D21 [get_ports FIXED_IO_ps_porb]
set_property PACKAGE_PIN C26 [get_ports {DDR_dqs_p[0]}]
set_property PACKAGE_PIN M21 [get_ports FIXED_IO_ddr_vrp]
set_property PACKAGE_PIN G29 [get_ports {DDR_dqs_p[2]}]
set_property PACKAGE_PIN F25 [get_ports DDR_reset_n]
set_property PACKAGE_PIN L29 [get_ports {DDR_dqs_n[3]}]
set_property PACKAGE_PIN H24 [get_ports {DDR_addr[11]}]
set_property PACKAGE_PIN C29 [get_ports {DDR_dqs_p[1]}]
set_property PACKAGE_PIN J24 [get_ports {DDR_addr[14]}]
set_property PACKAGE_PIN K26 [get_ports {DDR_addr[1]}]
set_property PACKAGE_PIN L27 [get_ports {DDR_addr[2]}]
set_property PACKAGE_PIN G25 [get_ports {DDR_addr[3]}]
set_property PACKAGE_PIN J26 [get_ports {DDR_addr[4]}]
set_property PACKAGE_PIN G24 [get_ports {DDR_addr[5]}]
set_property PACKAGE_PIN H26 [get_ports {DDR_addr[6]}]
set_property PACKAGE_PIN N21 [get_ports FIXED_IO_ddr_vrn]
set_property PACKAGE_PIN F27 [get_ports {DDR_addr[8]}]
set_property PACKAGE_PIN L25 [get_ports {DDR_addr[0]}]
set_property PACKAGE_PIN H23 [get_ports {DDR_addr[13]}]
set_property PACKAGE_PIN G26 [get_ports {DDR_addr[10]}]
set_property PACKAGE_PIN K22 [get_ports {DDR_addr[7]}]
set_property PACKAGE_PIN K23 [get_ports {DDR_addr[12]}]
set_property PACKAGE_PIN J23 [get_ports {DDR_addr[9]}]
set_property PACKAGE_PIN M27 [get_ports {DDR_ba[0]}]
set_property PACKAGE_PIN M24 [get_ports DDR_cas_n]
set_property PACKAGE_PIN M26 [get_ports {DDR_ba[1]}]
set_property PACKAGE_PIN K25 [get_ports DDR_ck_p]
set_property PACKAGE_PIN F24 [get_ports {FIXED_IO_mio[0]}]
set_property PACKAGE_PIN M25 [get_ports {DDR_ba[2]}]
set_property PACKAGE_PIN A24 [get_ports {FIXED_IO_mio[9]}]
set_property PACKAGE_PIN M22 [get_ports DDR_cke]
set_property PACKAGE_PIN N22 [get_ports DDR_cs_n]
set_property PACKAGE_PIN C27 [get_ports {DDR_dm[0]}]
set_property PACKAGE_PIN B30 [get_ports {DDR_dm[1]}]
set_property PACKAGE_PIN G27 [get_ports {DDR_dq[17]}]
set_property PACKAGE_PIN J28 [get_ports {DDR_dq[27]}]
set_property PACKAGE_PIN B27 [get_ports {DDR_dq[2]}]
set_property PACKAGE_PIN M29 [get_ports {DDR_dq[29]}]
set_property PACKAGE_PIN M30 [get_ports {DDR_dq[31]}]
set_property PACKAGE_PIN D25 [get_ports {DDR_dq[3]}]
set_property PACKAGE_PIN B25 [get_ports {DDR_dq[4]}]
set_property PACKAGE_PIN E26 [get_ports {DDR_dq[5]}]
set_property PACKAGE_PIN D26 [get_ports {DDR_dq[6]}]
set_property PACKAGE_PIN H29 [get_ports {DDR_dm[2]}]
set_property PACKAGE_PIN A29 [get_ports {DDR_dq[8]}]
set_property PACKAGE_PIN A25 [get_ports {DDR_dq[0]}]
set_property PACKAGE_PIN A30 [get_ports {DDR_dq[10]}]
set_property PACKAGE_PIN A28 [get_ports {DDR_dq[11]}]
set_property PACKAGE_PIN C28 [get_ports {DDR_dq[12]}]
set_property PACKAGE_PIN D30 [get_ports {DDR_dq[13]}]
set_property PACKAGE_PIN D28 [get_ports {DDR_dq[14]}]
set_property PACKAGE_PIN D29 [get_ports {DDR_dq[15]}]
set_property PACKAGE_PIN H27 [get_ports {DDR_dq[16]}]
set_property PACKAGE_PIN K28 [get_ports {DDR_dm[3]}]
set_property PACKAGE_PIN H28 [get_ports {DDR_dq[18]}]
set_property PACKAGE_PIN E25 [get_ports {DDR_dq[1]}]
set_property PACKAGE_PIN E30 [get_ports {DDR_dq[20]}]
set_property PACKAGE_PIN F28 [get_ports {DDR_dq[21]}]
set_property PACKAGE_PIN G30 [get_ports {DDR_dq[22]}]
set_property PACKAGE_PIN F30 [get_ports {DDR_dq[23]}]
set_property PACKAGE_PIN J29 [get_ports {DDR_dq[24]}]
set_property PACKAGE_PIN K27 [get_ports {DDR_dq[25]}]
set_property PACKAGE_PIN J30 [get_ports {DDR_dq[26]}]
set_property PACKAGE_PIN E28 [get_ports {DDR_dq[19]}]
set_property PACKAGE_PIN K30 [get_ports {DDR_dq[28]}]
set_property PACKAGE_PIN E27 [get_ports {DDR_dq[7]}]
set_property PACKAGE_PIN L30 [get_ports {DDR_dq[30]}]
set_property PACKAGE_PIN A27 [get_ports {DDR_dq[9]}]
set_property PACKAGE_PIN B26 [get_ports {DDR_dqs_n[0]}]
set_property PACKAGE_PIN B29 [get_ports {DDR_dqs_n[1]}]
set_property PACKAGE_PIN F29 [get_ports {DDR_dqs_n[2]}]
set_property PACKAGE_PIN B19 [get_ports FIXED_IO_ps_srstb]
set_property SLEW SLOW [get_ports FIXED_IO_ps_clk]
set_property DRIVE 8 [get_ports FIXED_IO_ps_clk]



####################################################################################
# Constraints from file : 'bd_design_clk_wiz_0_0.xdc'
####################################################################################


# file: bd_design_clk_wiz_0_0.xdc
#
# (c) Copyright 2008 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.
#

# Input clock periods. These duplicate the values entered for the
# input clocks. You can use these to time your system. If required
# commented constraints can be used in the top level xdc
#----------------------------------------------------------------
# Connect to input port when clock capable pin is selected for input
current_instance bd_design_i/clk_wiz_0/inst
create_clock -period 20.000 [get_ports -scoped_to_current_instance clk_in1]
set_input_jitter [get_clocks -of_objects [get_ports -scoped_to_current_instance clk_in1]] 0.200




####################################################################################
# Constraints from file : 'bd_design_rst_clk_wiz_0_250M_0.xdc'
####################################################################################


# file: bd_design_rst_clk_wiz_0_250M_0.xdc
# (c) Copyright 2009 - 2013 Xilinx, Inc. All rights reserved.
#
# This file contains confidential and proprietary information
# of Xilinx, Inc. and is protected under U.S. and
# international copyright and other intellectual property
# laws.
#
# DISCLAIMER
# This disclaimer is not a license and does not grant any
# rights to the materials distributed herewith. Except as
# otherwise provided in a valid license issued to you by
# Xilinx, and to the maximum extent permitted by applicable
# law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
# WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
# AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
# BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
# INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
# (2) Xilinx shall not be liable (whether in contract or tort,
# including negligence, or under any other theory of
# liability) for any loss or damage of any kind or nature
# related to, arising under or in connection with these
# materials, including for any direct, or any indirect,
# special, incidental, or consequential loss or damage
# (including loss of data, profits, goodwill, or any type of
# loss or damage suffered as a result of any action brought
# by a third party) even if such damage or loss was
# reasonably foreseeable or Xilinx had been advised of the
# possibility of the same.
#
# CRITICAL APPLICATIONS
# Xilinx products are not designed or intended to be fail-
# safe, or for use in any application requiring fail-safe
# performance, such as life-support or safety devices or
# systems, Class III medical devices, nuclear facilities,
# applications related to the deployment of airbags, or any
# other applications that could lead to death, personal
# injury, or severe property or environmental damage
# (individually and collectively, "Critical
# Applications"). Customer assumes the sole risk and
# liability of any use of Xilinx products in Critical
# Applications, subject only to applicable laws and
# regulations governing limitations on product liability.
#
# THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
# PART OF THIS FILE AT ALL TIMES.

current_instance -quiet
current_instance bd_design_i/rst_clk_wiz_0_250M/U0
set_false_path -to [get_pins -hier *cdc_to*/D]




# User Generated miscellaneous constraints

current_instance -quiet
set_property DONT_TOUCH true [get_cells {bd_design_i/FGPU_0/U0/uut/compute_units_i[0].compute_unit_inst/CV_inst/float_units_inst.float_inst}]
set_property HD.RECONFIGURABLE true [get_cells {bd_design_i/FGPU_0/U0/uut/compute_units_i[0].compute_unit_inst/CV_inst/float_units_inst.float_inst}]
set_property DONT_TOUCH true [get_cells {bd_design_i/FGPU_0/U0/uut/compute_units_i[1].compute_unit_inst/CV_inst/float_units_inst.float_inst}]
set_property HD.RECONFIGURABLE true [get_cells {bd_design_i/FGPU_0/U0/uut/compute_units_i[1].compute_unit_inst/CV_inst/float_units_inst.float_inst}]
set_property DONT_TOUCH true [get_cells {bd_design_i/FGPU_0/U0/uut/compute_units_i[2].compute_unit_inst/CV_inst/float_units_inst.float_inst}]
set_property HD.RECONFIGURABLE true [get_cells {bd_design_i/FGPU_0/U0/uut/compute_units_i[2].compute_unit_inst/CV_inst/float_units_inst.float_inst}]
set_property DONT_TOUCH true [get_cells {bd_design_i/FGPU_0/U0/uut/compute_units_i[3].compute_unit_inst/CV_inst/float_units_inst.float_inst}]
set_property HD.RECONFIGURABLE true [get_cells {bd_design_i/FGPU_0/U0/uut/compute_units_i[3].compute_unit_inst/CV_inst/float_units_inst.float_inst}]

# User Generated physical constraints

create_pblock pblock_flt_unts_inst.flt_inst
add_cells_to_pblock [get_pblocks pblock_flt_unts_inst.flt_inst] [get_cells -quiet [list {bd_design_i/FGPU_0/U0/uut/compute_units_i[0].compute_unit_inst/CV_inst/float_units_inst.float_inst}]]
resize_pblock [get_pblocks pblock_flt_unts_inst.flt_inst] -add {SLICE_X38Y60:SLICE_X129Y89}
resize_pblock [get_pblocks pblock_flt_unts_inst.flt_inst] -add {DSP48_X3Y24:DSP48_X4Y35}
resize_pblock [get_pblocks pblock_flt_unts_inst.flt_inst] -add {RAMB18_X3Y24:RAMB18_X5Y35}
resize_pblock [get_pblocks pblock_flt_unts_inst.flt_inst] -add {RAMB36_X3Y12:RAMB36_X5Y17}
set_property SNAPPING_MODE ON [get_pblocks pblock_flt_unts_inst.flt_inst]
create_pblock pblock_flt_unts_inst.flt_inst_1
add_cells_to_pblock [get_pblocks pblock_flt_unts_inst.flt_inst_1] [get_cells -quiet [list {bd_design_i/FGPU_0/U0/uut/compute_units_i[1].compute_unit_inst/CV_inst/float_units_inst.float_inst}]]
resize_pblock [get_pblocks pblock_flt_unts_inst.flt_inst_1] -add {SLICE_X38Y110:SLICE_X129Y139}
resize_pblock [get_pblocks pblock_flt_unts_inst.flt_inst_1] -add {DSP48_X3Y44:DSP48_X4Y55}
resize_pblock [get_pblocks pblock_flt_unts_inst.flt_inst_1] -add {RAMB18_X3Y44:RAMB18_X5Y55}
resize_pblock [get_pblocks pblock_flt_unts_inst.flt_inst_1] -add {RAMB36_X3Y22:RAMB36_X5Y27}
set_property SNAPPING_MODE ON [get_pblocks pblock_flt_unts_inst.flt_inst_1]
create_pblock pblock_flt_unts_inst.flt_inst_2
add_cells_to_pblock [get_pblocks pblock_flt_unts_inst.flt_inst_2] [get_cells -quiet [list {bd_design_i/FGPU_0/U0/uut/compute_units_i[2].compute_unit_inst/CV_inst/float_units_inst.float_inst}]]
resize_pblock [get_pblocks pblock_flt_unts_inst.flt_inst_2] -add {SLICE_X38Y160:SLICE_X129Y189}
resize_pblock [get_pblocks pblock_flt_unts_inst.flt_inst_2] -add {DSP48_X3Y64:DSP48_X4Y75}
resize_pblock [get_pblocks pblock_flt_unts_inst.flt_inst_2] -add {RAMB18_X3Y64:RAMB18_X5Y75}
resize_pblock [get_pblocks pblock_flt_unts_inst.flt_inst_2] -add {RAMB36_X3Y32:RAMB36_X5Y37}
set_property SNAPPING_MODE ON [get_pblocks pblock_flt_unts_inst.flt_inst_2]
create_pblock pblock_flt_unts_inst.flt_inst_3
add_cells_to_pblock [get_pblocks pblock_flt_unts_inst.flt_inst_3] [get_cells -quiet [list {bd_design_i/FGPU_0/U0/uut/compute_units_i[3].compute_unit_inst/CV_inst/float_units_inst.float_inst}]]
resize_pblock [get_pblocks pblock_flt_unts_inst.flt_inst_3] -add {SLICE_X38Y210:SLICE_X129Y239}
resize_pblock [get_pblocks pblock_flt_unts_inst.flt_inst_3] -add {DSP48_X3Y84:DSP48_X4Y95}
resize_pblock [get_pblocks pblock_flt_unts_inst.flt_inst_3] -add {RAMB18_X3Y84:RAMB18_X5Y95}
resize_pblock [get_pblocks pblock_flt_unts_inst.flt_inst_3] -add {RAMB36_X3Y42:RAMB36_X5Y47}
set_property SNAPPING_MODE ON [get_pblocks pblock_flt_unts_inst.flt_inst_3]

# User Generated miscellaneous constraints





# Vivado Generated miscellaneous constraints 

#revert back to original instance
current_instance -quiet
